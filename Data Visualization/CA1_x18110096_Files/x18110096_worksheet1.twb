<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20183.18.1219.1533                               -->
<workbook source-build='2018.3.2 (20183.18.1219.1533)' source-platform='mac' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <IntuitiveSorting />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='stats' inline='true' name='federated.0oyvh401d8i2s4178mcjd16ikzmk' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='stats' name='textscan.07uchy40odm2451clfm11024s3z3'>
            <connection class='textscan' directory='/Users/zainulabedin/Documents/Project/Extra/Sem2/DV/CA1-Premierleague' filename='stats.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.07uchy40odm2451clfm11024s3z3' name='stats.csv' table='[stats#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='team' ordinal='0' />
            <column datatype='integer' name='wins' ordinal='1' />
            <column datatype='integer' name='losses' ordinal='2' />
            <column datatype='integer' name='goals' ordinal='3' />
            <column datatype='integer' name='total_yel_card' ordinal='4' />
            <column datatype='integer' name='total_red_card' ordinal='5' />
            <column datatype='integer' name='total_scoring_att' ordinal='6' />
            <column datatype='integer' name='ontarget_scoring_att' ordinal='7' />
            <column datatype='integer' name='hit_woodwork' ordinal='8' />
            <column datatype='integer' name='att_hd_goal' ordinal='9' />
            <column datatype='integer' name='att_pen_goal' ordinal='10' />
            <column datatype='integer' name='att_freekick_goal' ordinal='11' />
            <column datatype='integer' name='att_ibox_goal' ordinal='12' />
            <column datatype='integer' name='att_obox_goal' ordinal='13' />
            <column datatype='integer' name='goal_fastbreak' ordinal='14' />
            <column datatype='integer' name='total_offside' ordinal='15' />
            <column datatype='integer' name='clean_sheet' ordinal='16' />
            <column datatype='integer' name='goals_conceded' ordinal='17' />
            <column datatype='integer' name='saves' ordinal='18' />
            <column datatype='integer' name='outfielder_block' ordinal='19' />
            <column datatype='integer' name='interception' ordinal='20' />
            <column datatype='integer' name='total_tackle' ordinal='21' />
            <column datatype='integer' name='last_man_tackle' ordinal='22' />
            <column datatype='integer' name='total_clearance' ordinal='23' />
            <column datatype='integer' name='head_clearance' ordinal='24' />
            <column datatype='integer' name='own_goals' ordinal='25' />
            <column datatype='integer' name='penalty_conceded' ordinal='26' />
            <column datatype='integer' name='pen_goals_conceded' ordinal='27' />
            <column datatype='integer' name='total_pass' ordinal='28' />
            <column datatype='integer' name='total_through_ball' ordinal='29' />
            <column datatype='integer' name='total_long_balls' ordinal='30' />
            <column datatype='integer' name='backward_pass' ordinal='31' />
            <column datatype='integer' name='total_cross' ordinal='32' />
            <column datatype='integer' name='corner_taken' ordinal='33' />
            <column datatype='integer' name='touches' ordinal='34' />
            <column datatype='integer' name='big_chance_missed' ordinal='35' />
            <column datatype='integer' name='clearance_off_line' ordinal='36' />
            <column datatype='integer' name='dispossessed' ordinal='37' />
            <column datatype='integer' name='penalty_save' ordinal='38' />
            <column datatype='integer' name='total_high_claim' ordinal='39' />
            <column datatype='integer' name='punches' ordinal='40' />
            <column datatype='date' date-parse-format='yyyy' name='season' ordinal='41' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[stats.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Rs&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>team</remote-name>
            <remote-type>129</remote-type>
            <local-name>[team]</local-name>
            <parent-name>[stats.csv]</parent-name>
            <remote-alias>team</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>wins</remote-name>
            <remote-type>20</remote-type>
            <local-name>[wins]</local-name>
            <parent-name>[stats.csv]</parent-name>
            <remote-alias>wins</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>losses</remote-name>
            <remote-type>20</remote-type>
            <local-name>[losses]</local-name>
            <parent-name>[stats.csv]</parent-name>
            <remote-alias>losses</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>goals</remote-name>
            <remote-type>20</remote-type>
            <local-name>[goals]</local-name>
            <parent-name>[stats.csv]</parent-name>
            <remote-alias>goals</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_yel_card</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_yel_card]</local-name>
            <parent-name>[stats.csv]</parent-name>
            <remote-alias>total_yel_card</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_red_card</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_red_card]</local-name>
            <parent-name>[stats.csv]</parent-name>
            <remote-alias>total_red_card</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_scoring_att</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_scoring_att]</local-name>
            <parent-name>[stats.csv]</parent-name>
            <remote-alias>total_scoring_att</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ontarget_scoring_att</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ontarget_scoring_att]</local-name>
            <parent-name>[stats.csv]</parent-name>
            <remote-alias>ontarget_scoring_att</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hit_woodwork</remote-name>
            <remote-type>20</remote-type>
            <local-name>[hit_woodwork]</local-name>
            <parent-name>[stats.csv]</parent-name>
            <remote-alias>hit_woodwork</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>att_hd_goal</remote-name>
            <remote-type>20</remote-type>
            <local-name>[att_hd_goal]</local-name>
            <parent-name>[stats.csv]</parent-name>
            <remote-alias>att_hd_goal</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>att_pen_goal</remote-name>
            <remote-type>20</remote-type>
            <local-name>[att_pen_goal]</local-name>
            <parent-name>[stats.csv]</parent-name>
            <remote-alias>att_pen_goal</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>att_freekick_goal</remote-name>
            <remote-type>20</remote-type>
            <local-name>[att_freekick_goal]</local-name>
            <parent-name>[stats.csv]</parent-name>
            <remote-alias>att_freekick_goal</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>att_ibox_goal</remote-name>
            <remote-type>20</remote-type>
            <local-name>[att_ibox_goal]</local-name>
            <parent-name>[stats.csv]</parent-name>
            <remote-alias>att_ibox_goal</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>att_obox_goal</remote-name>
            <remote-type>20</remote-type>
            <local-name>[att_obox_goal]</local-name>
            <parent-name>[stats.csv]</parent-name>
            <remote-alias>att_obox_goal</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>goal_fastbreak</remote-name>
            <remote-type>20</remote-type>
            <local-name>[goal_fastbreak]</local-name>
            <parent-name>[stats.csv]</parent-name>
            <remote-alias>goal_fastbreak</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_offside</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_offside]</local-name>
            <parent-name>[stats.csv]</parent-name>
            <remote-alias>total_offside</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>clean_sheet</remote-name>
            <remote-type>20</remote-type>
            <local-name>[clean_sheet]</local-name>
            <parent-name>[stats.csv]</parent-name>
            <remote-alias>clean_sheet</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>goals_conceded</remote-name>
            <remote-type>20</remote-type>
            <local-name>[goals_conceded]</local-name>
            <parent-name>[stats.csv]</parent-name>
            <remote-alias>goals_conceded</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>saves</remote-name>
            <remote-type>20</remote-type>
            <local-name>[saves]</local-name>
            <parent-name>[stats.csv]</parent-name>
            <remote-alias>saves</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>outfielder_block</remote-name>
            <remote-type>20</remote-type>
            <local-name>[outfielder_block]</local-name>
            <parent-name>[stats.csv]</parent-name>
            <remote-alias>outfielder_block</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>interception</remote-name>
            <remote-type>20</remote-type>
            <local-name>[interception]</local-name>
            <parent-name>[stats.csv]</parent-name>
            <remote-alias>interception</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_tackle</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_tackle]</local-name>
            <parent-name>[stats.csv]</parent-name>
            <remote-alias>total_tackle</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>last_man_tackle</remote-name>
            <remote-type>20</remote-type>
            <local-name>[last_man_tackle]</local-name>
            <parent-name>[stats.csv]</parent-name>
            <remote-alias>last_man_tackle</remote-alias>
            <ordinal>22</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_clearance</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_clearance]</local-name>
            <parent-name>[stats.csv]</parent-name>
            <remote-alias>total_clearance</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>head_clearance</remote-name>
            <remote-type>20</remote-type>
            <local-name>[head_clearance]</local-name>
            <parent-name>[stats.csv]</parent-name>
            <remote-alias>head_clearance</remote-alias>
            <ordinal>24</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>own_goals</remote-name>
            <remote-type>20</remote-type>
            <local-name>[own_goals]</local-name>
            <parent-name>[stats.csv]</parent-name>
            <remote-alias>own_goals</remote-alias>
            <ordinal>25</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>penalty_conceded</remote-name>
            <remote-type>20</remote-type>
            <local-name>[penalty_conceded]</local-name>
            <parent-name>[stats.csv]</parent-name>
            <remote-alias>penalty_conceded</remote-alias>
            <ordinal>26</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pen_goals_conceded</remote-name>
            <remote-type>20</remote-type>
            <local-name>[pen_goals_conceded]</local-name>
            <parent-name>[stats.csv]</parent-name>
            <remote-alias>pen_goals_conceded</remote-alias>
            <ordinal>27</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_pass</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_pass]</local-name>
            <parent-name>[stats.csv]</parent-name>
            <remote-alias>total_pass</remote-alias>
            <ordinal>28</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_through_ball</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_through_ball]</local-name>
            <parent-name>[stats.csv]</parent-name>
            <remote-alias>total_through_ball</remote-alias>
            <ordinal>29</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_long_balls</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_long_balls]</local-name>
            <parent-name>[stats.csv]</parent-name>
            <remote-alias>total_long_balls</remote-alias>
            <ordinal>30</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>backward_pass</remote-name>
            <remote-type>20</remote-type>
            <local-name>[backward_pass]</local-name>
            <parent-name>[stats.csv]</parent-name>
            <remote-alias>backward_pass</remote-alias>
            <ordinal>31</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cross</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_cross]</local-name>
            <parent-name>[stats.csv]</parent-name>
            <remote-alias>total_cross</remote-alias>
            <ordinal>32</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>corner_taken</remote-name>
            <remote-type>20</remote-type>
            <local-name>[corner_taken]</local-name>
            <parent-name>[stats.csv]</parent-name>
            <remote-alias>corner_taken</remote-alias>
            <ordinal>33</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>touches</remote-name>
            <remote-type>20</remote-type>
            <local-name>[touches]</local-name>
            <parent-name>[stats.csv]</parent-name>
            <remote-alias>touches</remote-alias>
            <ordinal>34</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>big_chance_missed</remote-name>
            <remote-type>20</remote-type>
            <local-name>[big_chance_missed]</local-name>
            <parent-name>[stats.csv]</parent-name>
            <remote-alias>big_chance_missed</remote-alias>
            <ordinal>35</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>clearance_off_line</remote-name>
            <remote-type>20</remote-type>
            <local-name>[clearance_off_line]</local-name>
            <parent-name>[stats.csv]</parent-name>
            <remote-alias>clearance_off_line</remote-alias>
            <ordinal>36</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dispossessed</remote-name>
            <remote-type>20</remote-type>
            <local-name>[dispossessed]</local-name>
            <parent-name>[stats.csv]</parent-name>
            <remote-alias>dispossessed</remote-alias>
            <ordinal>37</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>penalty_save</remote-name>
            <remote-type>20</remote-type>
            <local-name>[penalty_save]</local-name>
            <parent-name>[stats.csv]</parent-name>
            <remote-alias>penalty_save</remote-alias>
            <ordinal>38</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_high_claim</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_high_claim]</local-name>
            <parent-name>[stats.csv]</parent-name>
            <remote-alias>total_high_claim</remote-alias>
            <ordinal>39</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>punches</remote-name>
            <remote-type>20</remote-type>
            <local-name>[punches]</local-name>
            <parent-name>[stats.csv]</parent-name>
            <remote-alias>punches</remote-alias>
            <ordinal>40</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>season</remote-name>
            <remote-type>7</remote-type>
            <local-name>[season]</local-name>
            <parent-name>[stats.csv]</parent-name>
            <remote-alias>season</remote-alias>
            <ordinal>41</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Att Freekick Goal' datatype='integer' name='[att_freekick_goal]' role='measure' type='quantitative' />
      <column caption='Att Hd Goal' datatype='integer' name='[att_hd_goal]' role='measure' type='quantitative' />
      <column caption='Att Ibox Goal' datatype='integer' name='[att_ibox_goal]' role='measure' type='quantitative' />
      <column caption='Att Obox Goal' datatype='integer' name='[att_obox_goal]' role='measure' type='quantitative' />
      <column caption='Att Pen Goal' datatype='integer' name='[att_pen_goal]' role='measure' type='quantitative' />
      <column caption='Backward Pass' datatype='integer' name='[backward_pass]' role='measure' type='quantitative' />
      <column caption='Big Chance Missed' datatype='integer' name='[big_chance_missed]' role='measure' type='quantitative' />
      <column caption='Clean Sheet' datatype='integer' name='[clean_sheet]' role='measure' type='quantitative' />
      <column caption='Clearance Off Line' datatype='integer' name='[clearance_off_line]' role='measure' type='quantitative' />
      <column caption='Corner Taken' datatype='integer' name='[corner_taken]' role='measure' type='quantitative' />
      <column caption='Dispossessed' datatype='integer' name='[dispossessed]' role='measure' type='quantitative' />
      <column caption='Goal Fastbreak' datatype='integer' name='[goal_fastbreak]' role='measure' type='quantitative' />
      <column caption='Goals' datatype='integer' name='[goals]' role='measure' type='quantitative' />
      <column caption='Goals Conceded' datatype='integer' name='[goals_conceded]' role='measure' type='quantitative' />
      <column caption='Head Clearance' datatype='integer' name='[head_clearance]' role='measure' type='quantitative' />
      <column caption='Hit Woodwork' datatype='integer' name='[hit_woodwork]' role='measure' type='quantitative' />
      <column caption='Interception' datatype='integer' name='[interception]' role='measure' type='quantitative' />
      <column caption='Last Man Tackle' datatype='integer' name='[last_man_tackle]' role='measure' type='quantitative' />
      <column caption='Losses' datatype='integer' name='[losses]' role='measure' type='quantitative' />
      <column caption='Ontarget Scoring Att' datatype='integer' name='[ontarget_scoring_att]' role='measure' type='quantitative' />
      <column caption='Outfielder Block' datatype='integer' name='[outfielder_block]' role='measure' type='quantitative' />
      <column caption='Own Goals' datatype='integer' name='[own_goals]' role='measure' type='quantitative' />
      <column caption='Pen Goals Conceded' datatype='integer' name='[pen_goals_conceded]' role='measure' type='quantitative' />
      <column caption='Penalty Conceded' datatype='integer' name='[penalty_conceded]' role='measure' type='quantitative' />
      <column caption='Penalty Save' datatype='integer' name='[penalty_save]' role='measure' type='quantitative' />
      <column caption='Punches' datatype='integer' name='[punches]' role='measure' type='quantitative' />
      <column caption='Saves' datatype='integer' name='[saves]' role='measure' type='quantitative' />
      <column caption='Season' datatype='date' name='[season]' role='dimension' type='quantitative' />
      <column caption='Team' datatype='string' name='[team]' role='dimension' type='nominal' />
      <column caption='Total Clearance' datatype='integer' name='[total_clearance]' role='measure' type='quantitative' />
      <column caption='Total Cross' datatype='integer' name='[total_cross]' role='measure' type='quantitative' />
      <column caption='Total High Claim' datatype='integer' name='[total_high_claim]' role='measure' type='quantitative' />
      <column caption='Total Long Balls' datatype='integer' name='[total_long_balls]' role='measure' type='quantitative' />
      <column caption='Total Offside' datatype='integer' name='[total_offside]' role='measure' type='quantitative' />
      <column caption='Total Pass' datatype='integer' name='[total_pass]' role='measure' type='quantitative' />
      <column caption='Total Red Card' datatype='integer' name='[total_red_card]' role='measure' type='quantitative' />
      <column caption='Total Scoring Att' datatype='integer' name='[total_scoring_att]' role='measure' type='quantitative' />
      <column caption='Total Tackle' datatype='integer' name='[total_tackle]' role='measure' type='quantitative' />
      <column caption='Total Through Ball' datatype='integer' name='[total_through_ball]' role='measure' type='quantitative' />
      <column caption='Total Yel Card' datatype='integer' name='[total_yel_card]' role='measure' type='quantitative' />
      <column caption='Touches' datatype='integer' name='[touches]' role='measure' type='quantitative' />
      <column caption='Wins' datatype='integer' name='[wins]' role='measure' type='quantitative' />
      <column-instance column='[team]' derivation='None' name='[none:team:nk]' pivot='key' type='nominal' />
      <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
      <column-instance column='[att_freekick_goal]' derivation='Sum' name='[sum:att_freekick_goal:qk]' pivot='key' type='quantitative' />
      <column-instance column='[att_hd_goal]' derivation='Sum' name='[sum:att_hd_goal:qk]' pivot='key' type='quantitative' />
      <column-instance column='[att_ibox_goal]' derivation='Sum' name='[sum:att_ibox_goal:qk]' pivot='key' type='quantitative' />
      <column-instance column='[att_obox_goal]' derivation='Sum' name='[sum:att_obox_goal:qk]' pivot='key' type='quantitative' />
      <column-instance column='[att_pen_goal]' derivation='Sum' name='[sum:att_pen_goal:qk]' pivot='key' type='quantitative' />
      <column-instance column='[backward_pass]' derivation='Sum' name='[sum:backward_pass:qk]' pivot='key' type='quantitative' />
      <column-instance column='[big_chance_missed]' derivation='Sum' name='[sum:big_chance_missed:qk]' pivot='key' type='quantitative' />
      <column-instance column='[clean_sheet]' derivation='Sum' name='[sum:clean_sheet:qk]' pivot='key' type='quantitative' />
      <column-instance column='[clearance_off_line]' derivation='Sum' name='[sum:clearance_off_line:qk]' pivot='key' type='quantitative' />
      <column-instance column='[corner_taken]' derivation='Sum' name='[sum:corner_taken:qk]' pivot='key' type='quantitative' />
      <column-instance column='[dispossessed]' derivation='Sum' name='[sum:dispossessed:qk]' pivot='key' type='quantitative' />
      <column-instance column='[goal_fastbreak]' derivation='Sum' name='[sum:goal_fastbreak:qk]' pivot='key' type='quantitative' />
      <column-instance column='[goals]' derivation='Sum' name='[sum:goals:qk]' pivot='key' type='quantitative' />
      <column-instance column='[goals_conceded]' derivation='Sum' name='[sum:goals_conceded:qk]' pivot='key' type='quantitative' />
      <column-instance column='[head_clearance]' derivation='Sum' name='[sum:head_clearance:qk]' pivot='key' type='quantitative' />
      <column-instance column='[hit_woodwork]' derivation='Sum' name='[sum:hit_woodwork:qk]' pivot='key' type='quantitative' />
      <column-instance column='[interception]' derivation='Sum' name='[sum:interception:qk]' pivot='key' type='quantitative' />
      <column-instance column='[last_man_tackle]' derivation='Sum' name='[sum:last_man_tackle:qk]' pivot='key' type='quantitative' />
      <column-instance column='[losses]' derivation='Sum' name='[sum:losses:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_red_card]' derivation='Sum' name='[sum:total_red_card:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_yel_card]' derivation='Sum' name='[sum:total_yel_card:qk]' pivot='key' type='quantitative' />
      <column-instance column='[wins]' derivation='Sum' name='[sum:wins:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.106599' measure-ordering='alphabetic' measure-percentage='0.893401' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:team:nk]' type='palette'>
            <map to='#14a2ff'>
              <bucket>&quot;Manchester City&quot;</bucket>
            </map>
            <map to='#302cff'>
              <bucket>&quot;Chelsea&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Burnley&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sheffield United&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;AFC Bournemouth&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Blackburn Rovers&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Norwich City&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Crystal Palace&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Swansea City&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cardiff City&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Southampton&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Blackpool&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Portsmouth&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Leicester City&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Wolverhampton Wanderers&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Huddersfield Town&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;West Ham United&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bolton Wanderers&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Queens Park Rangers&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Derby County&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tottenham Hotspur&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Everton&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Watford&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Hull City&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Wigan Athletic&quot;</bucket>
            </map>
            <map to='#d53f6f'>
              <bucket>&quot;Liverpool&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Charlton Athletic&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Stoke City&quot;</bucket>
            </map>
            <map to='#e51c1a'>
              <bucket>&quot;Manchester United&quot;</bucket>
            </map>
            <map to='#e7a117'>
              <bucket>&quot;Arsenal&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Brighton and Hove Albion&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Reading&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Aston Villa&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Middlesbrough&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Fulham&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;West Bromwich Albion&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sunderland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Birmingham City&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Newcastle United&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:big_chance_missed:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0oyvh401d8i2s4178mcjd16ikzmk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:att_ibox_goal:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:goals:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:wins:qk]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:dispossessed:qk]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:clean_sheet:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:att_obox_goal:qk]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:interception:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:att_freekick_goal:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:head_clearance:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:att_pen_goal:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:goal_fastbreak:qk]&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:hit_woodwork:qk]&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:last_man_tackle:qk]&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:Number of Records:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:clearance_off_line:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:goals_conceded:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:losses:qk]&quot;</bucket>
            </map>
            <map to='#ef000b'>
              <bucket>&quot;[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:total_red_card:qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:backward_pass:qk]&quot;</bucket>
            </map>
            <map to='#f4e609'>
              <bucket>&quot;[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:total_yel_card:qk]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:corner_taken:qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:att_hd_goal:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Stepped lines' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Team' />
        <param name='target' value='Stepped lines' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Attack'>
      <table>
        <view>
          <datasources>
            <datasource caption='stats' name='federated.0oyvh401d8i2s4178mcjd16ikzmk' />
          </datasources>
          <datasource-dependencies datasource='federated.0oyvh401d8i2s4178mcjd16ikzmk'>
            <column caption='Att Freekick Goal' datatype='integer' name='[att_freekick_goal]' role='measure' type='quantitative' />
            <column caption='Att Hd Goal' datatype='integer' name='[att_hd_goal]' role='measure' type='quantitative' />
            <column caption='Att Ibox Goal' datatype='integer' name='[att_ibox_goal]' role='measure' type='quantitative' />
            <column caption='Att Obox Goal' datatype='integer' name='[att_obox_goal]' role='measure' type='quantitative' />
            <column caption='Att Pen Goal' datatype='integer' name='[att_pen_goal]' role='measure' type='quantitative' />
            <column caption='Corner Taken' datatype='integer' name='[corner_taken]' role='measure' type='quantitative' />
            <column caption='Goal Fastbreak' datatype='integer' name='[goal_fastbreak]' role='measure' type='quantitative' />
            <column caption='Goals' datatype='integer' name='[goals]' role='measure' type='quantitative' />
            <column caption='Hit Woodwork' datatype='integer' name='[hit_woodwork]' role='measure' type='quantitative' />
            <column-instance column='[team]' derivation='None' name='[none:team:nk]' pivot='key' type='nominal' />
            <column caption='Ontarget Scoring Att' datatype='integer' name='[ontarget_scoring_att]' role='measure' type='quantitative' />
            <column caption='Pen Goals Conceded' datatype='integer' name='[pen_goals_conceded]' role='measure' type='quantitative' />
            <column caption='Season' datatype='date' name='[season]' role='dimension' type='quantitative' />
            <column-instance column='[att_freekick_goal]' derivation='Sum' name='[sum:att_freekick_goal:qk]' pivot='key' type='quantitative' />
            <column-instance column='[att_hd_goal]' derivation='Sum' name='[sum:att_hd_goal:qk]' pivot='key' type='quantitative' />
            <column-instance column='[att_ibox_goal]' derivation='Sum' name='[sum:att_ibox_goal:qk]' pivot='key' type='quantitative' />
            <column-instance column='[att_obox_goal]' derivation='Sum' name='[sum:att_obox_goal:qk]' pivot='key' type='quantitative' />
            <column-instance column='[att_pen_goal]' derivation='Sum' name='[sum:att_pen_goal:qk]' pivot='key' type='quantitative' />
            <column-instance column='[corner_taken]' derivation='Sum' name='[sum:corner_taken:qk]' pivot='key' type='quantitative' />
            <column-instance column='[goal_fastbreak]' derivation='Sum' name='[sum:goal_fastbreak:qk]' pivot='key' type='quantitative' />
            <column-instance column='[goals]' derivation='Sum' name='[sum:goals:qk]' pivot='key' type='quantitative' />
            <column-instance column='[hit_woodwork]' derivation='Sum' name='[sum:hit_woodwork:qk]' pivot='key' type='quantitative' />
            <column-instance column='[ontarget_scoring_att]' derivation='Sum' name='[sum:ontarget_scoring_att:qk]' pivot='key' type='quantitative' />
            <column-instance column='[pen_goals_conceded]' derivation='Sum' name='[sum:pen_goals_conceded:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_cross]' derivation='Sum' name='[sum:total_cross:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_high_claim]' derivation='Sum' name='[sum:total_high_claim:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_long_balls]' derivation='Sum' name='[sum:total_long_balls:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_pass]' derivation='Sum' name='[sum:total_pass:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_scoring_att]' derivation='Sum' name='[sum:total_scoring_att:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_through_ball]' derivation='Sum' name='[sum:total_through_ball:qk]' pivot='key' type='quantitative' />
            <column-instance column='[touches]' derivation='Sum' name='[sum:touches:qk]' pivot='key' type='quantitative' />
            <column-instance column='[wins]' derivation='Sum' name='[sum:wins:qk]' pivot='key' type='quantitative' />
            <column caption='Team' datatype='string' name='[team]' role='dimension' type='nominal' />
            <column caption='Total Cross' datatype='integer' name='[total_cross]' role='measure' type='quantitative' />
            <column caption='Total High Claim' datatype='integer' name='[total_high_claim]' role='measure' type='quantitative' />
            <column caption='Total Long Balls' datatype='integer' name='[total_long_balls]' role='measure' type='quantitative' />
            <column caption='Total Pass' datatype='integer' name='[total_pass]' role='measure' type='quantitative' />
            <column caption='Total Scoring Att' datatype='integer' name='[total_scoring_att]' role='measure' type='quantitative' />
            <column caption='Total Through Ball' datatype='integer' name='[total_through_ball]' role='measure' type='quantitative' />
            <column caption='Touches' datatype='integer' name='[touches]' role='measure' type='quantitative' />
            <column-instance column='[season]' derivation='Year-Trunc' name='[tyr:season:ok]' pivot='key' type='ordinal' />
            <column caption='Wins' datatype='integer' name='[wins]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0oyvh401d8i2s4178mcjd16ikzmk].[:Measure Names]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:att_freekick_goal:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:att_hd_goal:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:att_ibox_goal:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:att_obox_goal:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:att_pen_goal:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:corner_taken:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:goal_fastbreak:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:goals:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:hit_woodwork:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:ontarget_scoring_att:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:pen_goals_conceded:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:total_cross:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:total_high_claim:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:total_long_balls:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:total_pass:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:total_scoring_att:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:total_through_ball:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:touches:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:wins:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0oyvh401d8i2s4178mcjd16ikzmk].[none:team:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:team:nk]' member='&quot;Chelsea&quot;' />
              <groupfilter function='member' level='[none:team:nk]' member='&quot;Manchester City&quot;' />
              <groupfilter function='member' level='[none:team:nk]' member='&quot;Manchester United&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0oyvh401d8i2s4178mcjd16ikzmk].[none:team:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Manchester United&quot;</bucket>
              <bucket>&quot;Manchester City&quot;</bucket>
              <bucket>&quot;Chelsea&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0oyvh401d8i2s4178mcjd16ikzmk].[tyr:season:ok]'>
            <groupfilter from='#2007-01-01 00:00:00#' function='range' level='[tyr:season:ok]' to='#2018-01-01 00:00:00#' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[none:team:nk]</column>
            <column>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[:Measure Names]</column>
            <column>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[tyr:season:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[federated.0oyvh401d8i2s4178mcjd16ikzmk].[tyr:season:ok]' value='56' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0oyvh401d8i2s4178mcjd16ikzmk].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0oyvh401d8i2s4178mcjd16ikzmk].[none:team:nk] / [federated.0oyvh401d8i2s4178mcjd16ikzmk].[tyr:season:ok])</rows>
        <cols>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='Box and Whisker'>
      <table>
        <view>
          <datasources>
            <datasource caption='stats' name='federated.0oyvh401d8i2s4178mcjd16ikzmk' />
          </datasources>
          <datasource-dependencies datasource='federated.0oyvh401d8i2s4178mcjd16ikzmk'>
            <column-instance column='[team]' derivation='None' name='[none:team:nk]' pivot='key' type='nominal' />
            <column caption='Season' datatype='date' name='[season]' role='dimension' type='quantitative' />
            <column-instance column='[wins]' derivation='Sum' name='[sum:wins:qk]' pivot='key' type='quantitative' />
            <column caption='Team' datatype='string' name='[team]' role='dimension' type='nominal' />
            <column-instance column='[season]' derivation='Year-Trunc' name='[tyr:season:ok]' pivot='key' type='ordinal' />
            <column caption='Wins' datatype='integer' name='[wins]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0oyvh401d8i2s4178mcjd16ikzmk].[tyr:season:ok]' value='97' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0oyvh401d8i2s4178mcjd16ikzmk].[none:team:nk]' />
              <text column='[federated.0oyvh401d8i2s4178mcjd16ikzmk].[none:team:nk]' />
            </encodings>
            <reference-line axis-column='[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:wins:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:wins:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.36182320117950439' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:wins:qk]</rows>
        <cols>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[tyr:season:ok]</cols>
        <mark-labels>
          <mark-label id='0' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[tyr:season:ok]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:wins:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[none:team:nk]</field>
                  <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:wins:qk]</field>
                  <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[tyr:season:ok]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Liverpool&quot;</value>
                <value>20</value>
                <value>#2007-01-01 00:00:00#</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='1' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[tyr:season:ok]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:wins:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[none:team:nk]</field>
                  <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:wins:qk]</field>
                  <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[tyr:season:ok]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Wigan Athletic&quot;</value>
                <value>9</value>
                <value>#2010-01-01 00:00:00#</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='2' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[tyr:season:ok]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:wins:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[none:team:nk]</field>
                  <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:wins:qk]</field>
                  <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[tyr:season:ok]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;West Bromwich Albion&quot;</value>
                <value>10</value>
                <value>#2016-01-01 00:00:00#</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='3' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[tyr:season:ok]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:wins:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[none:team:nk]</field>
                  <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:wins:qk]</field>
                  <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[tyr:season:ok]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Tottenham Hotspur&quot;</value>
                <value>19</value>
                <value>#2015-01-01 00:00:00#</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='4' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[tyr:season:ok]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:wins:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[none:team:nk]</field>
                  <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:wins:qk]</field>
                  <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[tyr:season:ok]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Tottenham Hotspur&quot;</value>
                <value>20</value>
                <value>#2012-01-01 00:00:00#</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='5' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[tyr:season:ok]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:wins:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[none:team:nk]</field>
                  <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:wins:qk]</field>
                  <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[tyr:season:ok]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Swansea City&quot;</value>
                <value>8</value>
                <value>#2018-01-01 00:00:00#</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='6' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[tyr:season:ok]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:wins:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[none:team:nk]</field>
                  <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:wins:qk]</field>
                  <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[tyr:season:ok]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Sunderland&quot;</value>
                <value>6</value>
                <value>#2017-01-01 00:00:00#</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='7' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[tyr:season:ok]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:wins:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[none:team:nk]</field>
                  <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:wins:qk]</field>
                  <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[tyr:season:ok]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Sunderland&quot;</value>
                <value>9</value>
                <value>#2009-01-01 00:00:00#</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='8' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[tyr:season:ok]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:wins:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[none:team:nk]</field>
                  <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:wins:qk]</field>
                  <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[tyr:season:ok]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Southampton&quot;</value>
                <value>7</value>
                <value>#2018-01-01 00:00:00#</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='9' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[tyr:season:ok]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:wins:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[none:team:nk]</field>
                  <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:wins:qk]</field>
                  <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[tyr:season:ok]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Portsmouth&quot;</value>
                <value>7</value>
                <value>#2010-01-01 00:00:00#</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='10' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[tyr:season:ok]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:wins:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[none:team:nk]</field>
                  <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:wins:qk]</field>
                  <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[tyr:season:ok]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Norwich City&quot;</value>
                <value>8</value>
                <value>#2014-01-01 00:00:00#</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='11' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[tyr:season:ok]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:wins:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[none:team:nk]</field>
                  <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:wins:qk]</field>
                  <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[tyr:season:ok]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Newcastle United&quot;</value>
                <value>19</value>
                <value>#2012-01-01 00:00:00#</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='12' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[tyr:season:ok]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:wins:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[none:team:nk]</field>
                  <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:wins:qk]</field>
                  <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[tyr:season:ok]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Manchester United&quot;</value>
                <value>20</value>
                <value>#2015-01-01 00:00:00#</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='13' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[tyr:season:ok]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:wins:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[none:team:nk]</field>
                  <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:wins:qk]</field>
                  <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[tyr:season:ok]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Manchester City&quot;</value>
                <value>19</value>
                <value>#2016-01-01 00:00:00#</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='14' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[tyr:season:ok]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:wins:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[none:team:nk]</field>
                  <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:wins:qk]</field>
                  <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[tyr:season:ok]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Manchester City&quot;</value>
                <value>23</value>
                <value>#2013-01-01 00:00:00#</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='15' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[tyr:season:ok]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:wins:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[none:team:nk]</field>
                  <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:wins:qk]</field>
                  <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[tyr:season:ok]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Manchester City&quot;</value>
                <value>28</value>
                <value>#2012-01-01 00:00:00#</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='16' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[tyr:season:ok]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:wins:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[none:team:nk]</field>
                  <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:wins:qk]</field>
                  <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[tyr:season:ok]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Liverpool&quot;</value>
                <value>26</value>
                <value>#2014-01-01 00:00:00#</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='17' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[tyr:season:ok]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:wins:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[none:team:nk]</field>
                  <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:wins:qk]</field>
                  <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[tyr:season:ok]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Liverpool&quot;</value>
                <value>18</value>
                <value>#2010-01-01 00:00:00#</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='18' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[tyr:season:ok]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:wins:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[none:team:nk]</field>
                  <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:wins:qk]</field>
                  <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[tyr:season:ok]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Hull City&quot;</value>
                <value>8</value>
                <value>#2015-01-01 00:00:00#</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='19' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[tyr:season:ok]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:wins:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[none:team:nk]</field>
                  <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:wins:qk]</field>
                  <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[tyr:season:ok]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Hull City&quot;</value>
                <value>8</value>
                <value>#2009-01-01 00:00:00#</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='20' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[tyr:season:ok]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:wins:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[none:team:nk]</field>
                  <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:wins:qk]</field>
                  <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[tyr:season:ok]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Fulham&quot;</value>
                <value>9</value>
                <value>#2014-01-01 00:00:00#</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='21' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[tyr:season:ok]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:wins:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[none:team:nk]</field>
                  <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:wins:qk]</field>
                  <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[tyr:season:ok]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Chelsea&quot;</value>
                <value>21</value>
                <value>#2018-01-01 00:00:00#</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='22' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[tyr:season:ok]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:wins:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[none:team:nk]</field>
                  <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:wins:qk]</field>
                  <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[tyr:season:ok]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Chelsea&quot;</value>
                <value>25</value>
                <value>#2014-01-01 00:00:00#</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='23' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[tyr:season:ok]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:wins:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[none:team:nk]</field>
                  <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:wins:qk]</field>
                  <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[tyr:season:ok]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Chelsea&quot;</value>
                <value>22</value>
                <value>#2013-01-01 00:00:00#</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='24' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[tyr:season:ok]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:wins:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[none:team:nk]</field>
                  <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:wins:qk]</field>
                  <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[tyr:season:ok]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Burnley&quot;</value>
                <value>8</value>
                <value>#2010-01-01 00:00:00#</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='25' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[tyr:season:ok]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:wins:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[none:team:nk]</field>
                  <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:wins:qk]</field>
                  <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[tyr:season:ok]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Brighton and Hove Albion&quot;</value>
                <value>9</value>
                <value>#2018-01-01 00:00:00#</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='26' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[tyr:season:ok]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:wins:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[none:team:nk]</field>
                  <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:wins:qk]</field>
                  <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[tyr:season:ok]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Bolton Wanderers&quot;</value>
                <value>9</value>
                <value>#2008-01-01 00:00:00#</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='27' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[tyr:season:ok]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:wins:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[none:team:nk]</field>
                  <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:wins:qk]</field>
                  <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[tyr:season:ok]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Blackburn Rovers&quot;</value>
                <value>8</value>
                <value>#2012-01-01 00:00:00#</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='28' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[tyr:season:ok]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:wins:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[none:team:nk]</field>
                  <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:wins:qk]</field>
                  <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[tyr:season:ok]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Birmingham City&quot;</value>
                <value>8</value>
                <value>#2008-01-01 00:00:00#</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='29' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[tyr:season:ok]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:wins:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[none:team:nk]</field>
                  <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:wins:qk]</field>
                  <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[tyr:season:ok]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Aston Villa&quot;</value>
                <value>10</value>
                <value>#2014-01-01 00:00:00#</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='30' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[tyr:season:ok]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:wins:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[none:team:nk]</field>
                  <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:wins:qk]</field>
                  <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[tyr:season:ok]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Aston Villa&quot;</value>
                <value>7</value>
                <value>#2012-01-01 00:00:00#</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='31' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[tyr:season:ok]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:wins:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[none:team:nk]</field>
                  <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:wins:qk]</field>
                  <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[tyr:season:ok]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Aston Villa&quot;</value>
                <value>17</value>
                <value>#2009-01-01 00:00:00#</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='32' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[tyr:season:ok]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:wins:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[none:team:nk]</field>
                  <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:wins:qk]</field>
                  <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[tyr:season:ok]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Arsenal&quot;</value>
                <value>23</value>
                <value>#2017-01-01 00:00:00#</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='33' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[tyr:season:ok]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:wins:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[none:team:nk]</field>
                  <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:wins:qk]</field>
                  <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[tyr:season:ok]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Arsenal&quot;</value>
                <value>20</value>
                <value>#2016-01-01 00:00:00#</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='34' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[tyr:season:ok]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:wins:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[none:team:nk]</field>
                  <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:wins:qk]</field>
                  <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[tyr:season:ok]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Arsenal&quot;</value>
                <value>22</value>
                <value>#2015-01-01 00:00:00#</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='35' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[tyr:season:ok]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:wins:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[none:team:nk]</field>
                  <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:wins:qk]</field>
                  <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[tyr:season:ok]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Arsenal&quot;</value>
                <value>24</value>
                <value>#2014-01-01 00:00:00#</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='36' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[tyr:season:ok]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:wins:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[none:team:nk]</field>
                  <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:wins:qk]</field>
                  <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[tyr:season:ok]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Arsenal&quot;</value>
                <value>21</value>
                <value>#2012-01-01 00:00:00#</value>
              </tuple>
            </tuple-reference>
          </mark-label>
        </mark-labels>
      </table>
    </worksheet>
    <worksheet name='Goals scored | Goals conceded'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Goals scored | Goals conceded&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='stats' name='federated.0oyvh401d8i2s4178mcjd16ikzmk' />
          </datasources>
          <datasource-dependencies datasource='federated.0oyvh401d8i2s4178mcjd16ikzmk'>
            <column caption='Goals' datatype='integer' name='[goals]' role='measure' type='quantitative' />
            <column caption='Goals Conceded' datatype='integer' name='[goals_conceded]' role='measure' type='quantitative' />
            <column-instance column='[team]' derivation='None' name='[none:team:nk]' pivot='key' type='nominal' />
            <column caption='Season' datatype='date' name='[season]' role='dimension' type='quantitative' />
            <column-instance column='[goals]' derivation='Sum' name='[sum:goals:qk]' pivot='key' type='quantitative' />
            <column-instance column='[goals_conceded]' derivation='Sum' name='[sum:goals_conceded:qk]' pivot='key' type='quantitative' />
            <column caption='Team' datatype='string' name='[team]' role='dimension' type='nominal' />
            <column-instance column='[season]' derivation='Year-Trunc' name='[tyr:season:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0oyvh401d8i2s4178mcjd16ikzmk].[none:team:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:team:nk]' member='&quot;Arsenal&quot;' />
              <groupfilter function='member' level='[none:team:nk]' member='&quot;Chelsea&quot;' />
              <groupfilter function='member' level='[none:team:nk]' member='&quot;Liverpool&quot;' />
              <groupfilter function='member' level='[none:team:nk]' member='&quot;Manchester City&quot;' />
              <groupfilter function='member' level='[none:team:nk]' member='&quot;Manchester United&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[none:team:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0oyvh401d8i2s4178mcjd16ikzmk].[tyr:season:ok]' value='81' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#c0c0c0' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='div-level' scope='rows' value='10' />
            <format attr='div-level' scope='cols' value='10' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <lod column='[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:goals_conceded:qk]' />
            </encodings>
            <reference-line axis-column='[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:goals:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='none' probability='95' scope='per-cell' value-column='[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:goals_conceded:qk]' z-order='2' />
            <reference-line axis-column='[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:goals:qk]' enable-instant-analytics='true' fill-above='true' fill-below='true' formula='average' id='refline1' label-type='none' percentage-bands='true' probability='95' scope='per-cell' symmetric='false' value-column='[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:goals_conceded:qk]' z-order='1'>
              <reference-line-value percentage='60' />
              <reference-line-value percentage='80' />
            </reference-line>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0oyvh401d8i2s4178mcjd16ikzmk].[none:team:nk] * [federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:goals:qk])</rows>
        <cols>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[tyr:season:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Man. City Total Wins and losses'>
      <table>
        <view>
          <datasources>
            <datasource caption='stats' name='federated.0oyvh401d8i2s4178mcjd16ikzmk' />
          </datasources>
          <datasource-dependencies datasource='federated.0oyvh401d8i2s4178mcjd16ikzmk'>
            <column caption='Losses' datatype='integer' name='[losses]' role='measure' type='quantitative' />
            <column-instance column='[team]' derivation='None' name='[none:team:nk]' pivot='key' type='nominal' />
            <column caption='Season' datatype='date' name='[season]' role='dimension' type='quantitative' />
            <column-instance column='[losses]' derivation='Sum' name='[sum:losses:qk]' pivot='key' type='quantitative' />
            <column-instance column='[wins]' derivation='Sum' name='[sum:wins:qk]' pivot='key' type='quantitative' />
            <column caption='Team' datatype='string' name='[team]' role='dimension' type='nominal' />
            <column-instance column='[season]' derivation='Year-Trunc' name='[tyr:season:qk]' pivot='key' type='quantitative' />
            <column caption='Wins' datatype='integer' name='[wins]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0oyvh401d8i2s4178mcjd16ikzmk].[none:team:nk]'>
            <groupfilter function='member' level='[none:team:nk]' member='&quot;Manchester City&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <computed-sort column='[federated.0oyvh401d8i2s4178mcjd16ikzmk].[none:team:nk]' direction='ASC' using='[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:wins:qk]' />
          <slices>
            <column>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[none:team:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:wins:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0oyvh401d8i2s4178mcjd16ikzmk].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:losses:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0oyvh401d8i2s4178mcjd16ikzmk].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:wins:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0oyvh401d8i2s4178mcjd16ikzmk].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0oyvh401d8i2s4178mcjd16ikzmk].[none:team:nk] * ([federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:losses:qk] + [federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:wins:qk]))</rows>
        <cols>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[tyr:season:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Man. Utd Total Wins and losses'>
      <table>
        <view>
          <datasources>
            <datasource caption='stats' name='federated.0oyvh401d8i2s4178mcjd16ikzmk' />
          </datasources>
          <datasource-dependencies datasource='federated.0oyvh401d8i2s4178mcjd16ikzmk'>
            <column caption='Losses' datatype='integer' name='[losses]' role='measure' type='quantitative' />
            <column-instance column='[team]' derivation='None' name='[none:team:nk]' pivot='key' type='nominal' />
            <column caption='Season' datatype='date' name='[season]' role='dimension' type='quantitative' />
            <column-instance column='[losses]' derivation='Sum' name='[sum:losses:qk]' pivot='key' type='quantitative' />
            <column-instance column='[wins]' derivation='Sum' name='[sum:wins:qk]' pivot='key' type='quantitative' />
            <column caption='Team' datatype='string' name='[team]' role='dimension' type='nominal' />
            <column-instance column='[season]' derivation='Year-Trunc' name='[tyr:season:qk]' pivot='key' type='quantitative' />
            <column caption='Wins' datatype='integer' name='[wins]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0oyvh401d8i2s4178mcjd16ikzmk].[none:team:nk]'>
            <groupfilter function='member' level='[none:team:nk]' member='&quot;Manchester United&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <computed-sort column='[federated.0oyvh401d8i2s4178mcjd16ikzmk].[none:team:nk]' direction='ASC' using='[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:wins:qk]' />
          <slices>
            <column>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[none:team:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:wins:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0oyvh401d8i2s4178mcjd16ikzmk].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:losses:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0oyvh401d8i2s4178mcjd16ikzmk].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:wins:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0oyvh401d8i2s4178mcjd16ikzmk].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0oyvh401d8i2s4178mcjd16ikzmk].[none:team:nk] * ([federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:losses:qk] + [federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:wins:qk]))</rows>
        <cols>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[tyr:season:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Measures'>
      <table>
        <view>
          <datasources>
            <datasource caption='stats' name='federated.0oyvh401d8i2s4178mcjd16ikzmk' />
          </datasources>
          <datasource-dependencies datasource='federated.0oyvh401d8i2s4178mcjd16ikzmk'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Att Freekick Goal' datatype='integer' name='[att_freekick_goal]' role='measure' type='quantitative' />
            <column caption='Att Hd Goal' datatype='integer' name='[att_hd_goal]' role='measure' type='quantitative' />
            <column caption='Att Ibox Goal' datatype='integer' name='[att_ibox_goal]' role='measure' type='quantitative' />
            <column caption='Att Obox Goal' datatype='integer' name='[att_obox_goal]' role='measure' type='quantitative' />
            <column caption='Att Pen Goal' datatype='integer' name='[att_pen_goal]' role='measure' type='quantitative' />
            <column caption='Backward Pass' datatype='integer' name='[backward_pass]' role='measure' type='quantitative' />
            <column caption='Big Chance Missed' datatype='integer' name='[big_chance_missed]' role='measure' type='quantitative' />
            <column caption='Clean Sheet' datatype='integer' name='[clean_sheet]' role='measure' type='quantitative' />
            <column caption='Clearance Off Line' datatype='integer' name='[clearance_off_line]' role='measure' type='quantitative' />
            <column caption='Corner Taken' datatype='integer' name='[corner_taken]' role='measure' type='quantitative' />
            <column caption='Dispossessed' datatype='integer' name='[dispossessed]' role='measure' type='quantitative' />
            <column caption='Goal Fastbreak' datatype='integer' name='[goal_fastbreak]' role='measure' type='quantitative' />
            <column caption='Goals' datatype='integer' name='[goals]' role='measure' type='quantitative' />
            <column caption='Goals Conceded' datatype='integer' name='[goals_conceded]' role='measure' type='quantitative' />
            <column caption='Head Clearance' datatype='integer' name='[head_clearance]' role='measure' type='quantitative' />
            <column caption='Hit Woodwork' datatype='integer' name='[hit_woodwork]' role='measure' type='quantitative' />
            <column caption='Interception' datatype='integer' name='[interception]' role='measure' type='quantitative' />
            <column caption='Last Man Tackle' datatype='integer' name='[last_man_tackle]' role='measure' type='quantitative' />
            <column caption='Losses' datatype='integer' name='[losses]' role='measure' type='quantitative' />
            <column-instance column='[team]' derivation='None' name='[none:team:nk]' pivot='key' type='nominal' />
            <column caption='Ontarget Scoring Att' datatype='integer' name='[ontarget_scoring_att]' role='measure' type='quantitative' />
            <column caption='Outfielder Block' datatype='integer' name='[outfielder_block]' role='measure' type='quantitative' />
            <column caption='Own Goals' datatype='integer' name='[own_goals]' role='measure' type='quantitative' />
            <column caption='Pen Goals Conceded' datatype='integer' name='[pen_goals_conceded]' role='measure' type='quantitative' />
            <column caption='Penalty Conceded' datatype='integer' name='[penalty_conceded]' role='measure' type='quantitative' />
            <column caption='Penalty Save' datatype='integer' name='[penalty_save]' role='measure' type='quantitative' />
            <column caption='Punches' datatype='integer' name='[punches]' role='measure' type='quantitative' />
            <column caption='Saves' datatype='integer' name='[saves]' role='measure' type='quantitative' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[att_freekick_goal]' derivation='Sum' name='[sum:att_freekick_goal:qk]' pivot='key' type='quantitative' />
            <column-instance column='[att_hd_goal]' derivation='Sum' name='[sum:att_hd_goal:qk]' pivot='key' type='quantitative' />
            <column-instance column='[att_ibox_goal]' derivation='Sum' name='[sum:att_ibox_goal:qk]' pivot='key' type='quantitative' />
            <column-instance column='[att_obox_goal]' derivation='Sum' name='[sum:att_obox_goal:qk]' pivot='key' type='quantitative' />
            <column-instance column='[att_pen_goal]' derivation='Sum' name='[sum:att_pen_goal:qk]' pivot='key' type='quantitative' />
            <column-instance column='[backward_pass]' derivation='Sum' name='[sum:backward_pass:qk]' pivot='key' type='quantitative' />
            <column-instance column='[big_chance_missed]' derivation='Sum' name='[sum:big_chance_missed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[clean_sheet]' derivation='Sum' name='[sum:clean_sheet:qk]' pivot='key' type='quantitative' />
            <column-instance column='[clearance_off_line]' derivation='Sum' name='[sum:clearance_off_line:qk]' pivot='key' type='quantitative' />
            <column-instance column='[corner_taken]' derivation='Sum' name='[sum:corner_taken:qk]' pivot='key' type='quantitative' />
            <column-instance column='[dispossessed]' derivation='Sum' name='[sum:dispossessed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[goal_fastbreak]' derivation='Sum' name='[sum:goal_fastbreak:qk]' pivot='key' type='quantitative' />
            <column-instance column='[goals]' derivation='Sum' name='[sum:goals:qk]' pivot='key' type='quantitative' />
            <column-instance column='[goals_conceded]' derivation='Sum' name='[sum:goals_conceded:qk]' pivot='key' type='quantitative' />
            <column-instance column='[head_clearance]' derivation='Sum' name='[sum:head_clearance:qk]' pivot='key' type='quantitative' />
            <column-instance column='[hit_woodwork]' derivation='Sum' name='[sum:hit_woodwork:qk]' pivot='key' type='quantitative' />
            <column-instance column='[interception]' derivation='Sum' name='[sum:interception:qk]' pivot='key' type='quantitative' />
            <column-instance column='[last_man_tackle]' derivation='Sum' name='[sum:last_man_tackle:qk]' pivot='key' type='quantitative' />
            <column-instance column='[losses]' derivation='Sum' name='[sum:losses:qk]' pivot='key' type='quantitative' />
            <column-instance column='[ontarget_scoring_att]' derivation='Sum' name='[sum:ontarget_scoring_att:qk]' pivot='key' type='quantitative' />
            <column-instance column='[outfielder_block]' derivation='Sum' name='[sum:outfielder_block:qk]' pivot='key' type='quantitative' />
            <column-instance column='[own_goals]' derivation='Sum' name='[sum:own_goals:qk]' pivot='key' type='quantitative' />
            <column-instance column='[pen_goals_conceded]' derivation='Sum' name='[sum:pen_goals_conceded:qk]' pivot='key' type='quantitative' />
            <column-instance column='[penalty_conceded]' derivation='Sum' name='[sum:penalty_conceded:qk]' pivot='key' type='quantitative' />
            <column-instance column='[penalty_save]' derivation='Sum' name='[sum:penalty_save:qk]' pivot='key' type='quantitative' />
            <column-instance column='[punches]' derivation='Sum' name='[sum:punches:qk]' pivot='key' type='quantitative' />
            <column-instance column='[saves]' derivation='Sum' name='[sum:saves:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_clearance]' derivation='Sum' name='[sum:total_clearance:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_cross]' derivation='Sum' name='[sum:total_cross:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_high_claim]' derivation='Sum' name='[sum:total_high_claim:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_long_balls]' derivation='Sum' name='[sum:total_long_balls:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_offside]' derivation='Sum' name='[sum:total_offside:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_pass]' derivation='Sum' name='[sum:total_pass:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_red_card]' derivation='Sum' name='[sum:total_red_card:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_scoring_att]' derivation='Sum' name='[sum:total_scoring_att:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_tackle]' derivation='Sum' name='[sum:total_tackle:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_through_ball]' derivation='Sum' name='[sum:total_through_ball:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_yel_card]' derivation='Sum' name='[sum:total_yel_card:qk]' pivot='key' type='quantitative' />
            <column-instance column='[touches]' derivation='Sum' name='[sum:touches:qk]' pivot='key' type='quantitative' />
            <column-instance column='[wins]' derivation='Sum' name='[sum:wins:qk]' pivot='key' type='quantitative' />
            <column caption='Team' datatype='string' name='[team]' role='dimension' type='nominal' />
            <column caption='Total Clearance' datatype='integer' name='[total_clearance]' role='measure' type='quantitative' />
            <column caption='Total Cross' datatype='integer' name='[total_cross]' role='measure' type='quantitative' />
            <column caption='Total High Claim' datatype='integer' name='[total_high_claim]' role='measure' type='quantitative' />
            <column caption='Total Long Balls' datatype='integer' name='[total_long_balls]' role='measure' type='quantitative' />
            <column caption='Total Offside' datatype='integer' name='[total_offside]' role='measure' type='quantitative' />
            <column caption='Total Pass' datatype='integer' name='[total_pass]' role='measure' type='quantitative' />
            <column caption='Total Red Card' datatype='integer' name='[total_red_card]' role='measure' type='quantitative' />
            <column caption='Total Scoring Att' datatype='integer' name='[total_scoring_att]' role='measure' type='quantitative' />
            <column caption='Total Tackle' datatype='integer' name='[total_tackle]' role='measure' type='quantitative' />
            <column caption='Total Through Ball' datatype='integer' name='[total_through_ball]' role='measure' type='quantitative' />
            <column caption='Total Yel Card' datatype='integer' name='[total_yel_card]' role='measure' type='quantitative' />
            <column caption='Touches' datatype='integer' name='[touches]' role='measure' type='quantitative' />
            <column caption='Wins' datatype='integer' name='[wins]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0oyvh401d8i2s4178mcjd16ikzmk].[:Measure Names]'>
            <groupfilter function='level-members' level='[:Measure Names]' />
          </filter>
          <manual-sort column='[federated.0oyvh401d8i2s4178mcjd16ikzmk].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:touches:qk]&quot;</bucket>
              <bucket>&quot;[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:total_pass:qk]&quot;</bucket>
              <bucket>&quot;[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:total_long_balls:qk]&quot;</bucket>
              <bucket>&quot;[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:backward_pass:qk]&quot;</bucket>
              <bucket>&quot;[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:total_clearance:qk]&quot;</bucket>
              <bucket>&quot;[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:total_cross:qk]&quot;</bucket>
              <bucket>&quot;[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:total_tackle:qk]&quot;</bucket>
              <bucket>&quot;[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:total_scoring_att:qk]&quot;</bucket>
              <bucket>&quot;[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:head_clearance:qk]&quot;</bucket>
              <bucket>&quot;[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:interception:qk]&quot;</bucket>
              <bucket>&quot;[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:dispossessed:qk]&quot;</bucket>
              <bucket>&quot;[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:corner_taken:qk]&quot;</bucket>
              <bucket>&quot;[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:ontarget_scoring_att:qk]&quot;</bucket>
              <bucket>&quot;[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:total_through_ball:qk]&quot;</bucket>
              <bucket>&quot;[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:outfielder_block:qk]&quot;</bucket>
              <bucket>&quot;[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:total_offside:qk]&quot;</bucket>
              <bucket>&quot;[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:goals:qk]&quot;</bucket>
              <bucket>&quot;[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:att_ibox_goal:qk]&quot;</bucket>
              <bucket>&quot;[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:total_yel_card:qk]&quot;</bucket>
              <bucket>&quot;[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:total_high_claim:qk]&quot;</bucket>
              <bucket>&quot;[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:saves:qk]&quot;</bucket>
              <bucket>&quot;[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:goals_conceded:qk]&quot;</bucket>
              <bucket>&quot;[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:big_chance_missed:qk]&quot;</bucket>
              <bucket>&quot;[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:wins:qk]&quot;</bucket>
              <bucket>&quot;[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:punches:qk]&quot;</bucket>
              <bucket>&quot;[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:hit_woodwork:qk]&quot;</bucket>
              <bucket>&quot;[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:clean_sheet:qk]&quot;</bucket>
              <bucket>&quot;[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:att_hd_goal:qk]&quot;</bucket>
              <bucket>&quot;[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:att_obox_goal:qk]&quot;</bucket>
              <bucket>&quot;[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:losses:qk]&quot;</bucket>
              <bucket>&quot;[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:last_man_tackle:qk]&quot;</bucket>
              <bucket>&quot;[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:att_pen_goal:qk]&quot;</bucket>
              <bucket>&quot;[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:goal_fastbreak:qk]&quot;</bucket>
              <bucket>&quot;[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:penalty_conceded:qk]&quot;</bucket>
              <bucket>&quot;[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:clearance_off_line:qk]&quot;</bucket>
              <bucket>&quot;[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:pen_goals_conceded:qk]&quot;</bucket>
              <bucket>&quot;[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:total_red_card:qk]&quot;</bucket>
              <bucket>&quot;[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:att_freekick_goal:qk]&quot;</bucket>
              <bucket>&quot;[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:own_goals:qk]&quot;</bucket>
              <bucket>&quot;[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:Number of Records:qk]&quot;</bucket>
              <bucket>&quot;[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:penalty_save:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0oyvh401d8i2s4178mcjd16ikzmk].[none:team:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:team:nk]' member='&quot;Arsenal&quot;' />
              <groupfilter function='member' level='[none:team:nk]' member='&quot;Chelsea&quot;' />
              <groupfilter function='member' level='[none:team:nk]' member='&quot;Liverpool&quot;' />
              <groupfilter function='member' level='[none:team:nk]' member='&quot;Manchester City&quot;' />
              <groupfilter function='member' level='[none:team:nk]' member='&quot;Manchester United&quot;' />
            </groupfilter>
          </filter>
          <columns>
            <shelf-sort direction='ASC' measure-to-sort-by='[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:total_pass:qk]'>
              <dimensions-to-sort>
                <dimension>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[none:team:nk]</dimension>
              </dimensions-to-sort>
            </shelf-sort>
          </columns>
          <slices>
            <column>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[none:team:nk]</column>
            <column>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0oyvh401d8i2s4178mcjd16ikzmk].[none:team:nk]' value='208' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0oyvh401d8i2s4178mcjd16ikzmk].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[:Measure Names]</rows>
        <cols>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[none:team:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Pie Red Cards Yellow Cards'>
      <table>
        <view>
          <datasources>
            <datasource caption='stats' name='federated.0oyvh401d8i2s4178mcjd16ikzmk' />
          </datasources>
          <datasource-dependencies datasource='federated.0oyvh401d8i2s4178mcjd16ikzmk'>
            <column-instance column='[team]' derivation='None' name='[none:team:nk]' pivot='key' type='nominal' />
            <column-instance column='[total_red_card]' derivation='Sum' name='[sum:total_red_card:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_yel_card]' derivation='Sum' name='[sum:total_yel_card:qk]' pivot='key' type='quantitative' />
            <column caption='Team' datatype='string' name='[team]' role='dimension' type='nominal' />
            <column caption='Total Red Card' datatype='integer' name='[total_red_card]' role='measure' type='quantitative' />
            <column caption='Total Yel Card' datatype='integer' name='[total_yel_card]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0oyvh401d8i2s4178mcjd16ikzmk].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:total_red_card:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:total_yel_card:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0oyvh401d8i2s4178mcjd16ikzmk].[none:team:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:team:nk]' member='&quot;Arsenal&quot;' />
              <groupfilter function='member' level='[none:team:nk]' member='&quot;Chelsea&quot;' />
              <groupfilter function='member' level='[none:team:nk]' member='&quot;Liverpool&quot;' />
              <groupfilter function='member' level='[none:team:nk]' member='&quot;Manchester City&quot;' />
              <groupfilter function='member' level='[none:team:nk]' member='&quot;Manchester United&quot;' />
              <groupfilter function='member' level='[none:team:nk]' member='&quot;Tottenham Hotspur&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[:Measure Names]</column>
            <column>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[none:team:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' value='232' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:total_red_card:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0oyvh401d8i2s4178mcjd16ikzmk].[:Measure Names]' />
              <size column='[federated.0oyvh401d8i2s4178mcjd16ikzmk].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.7911050319671631' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[none:team:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Red Cards Yellow Cards Yearwise'>
      <table>
        <view>
          <datasources>
            <datasource caption='stats' name='federated.0oyvh401d8i2s4178mcjd16ikzmk' />
          </datasources>
          <datasource-dependencies datasource='federated.0oyvh401d8i2s4178mcjd16ikzmk'>
            <column-instance column='[team]' derivation='None' name='[none:team:nk]' pivot='key' type='nominal' />
            <column caption='Season' datatype='date' name='[season]' role='dimension' type='quantitative' />
            <column-instance column='[total_red_card]' derivation='Sum' name='[sum:total_red_card:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_yel_card]' derivation='Sum' name='[sum:total_yel_card:qk]' pivot='key' type='quantitative' />
            <column caption='Team' datatype='string' name='[team]' role='dimension' type='nominal' />
            <column caption='Total Red Card' datatype='integer' name='[total_red_card]' role='measure' type='quantitative' />
            <column caption='Total Yel Card' datatype='integer' name='[total_yel_card]' role='measure' type='quantitative' />
            <column-instance column='[season]' derivation='Year-Trunc' name='[tyr:season:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0oyvh401d8i2s4178mcjd16ikzmk].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:total_red_card:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:total_yel_card:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:total_red_card:qk]' included-values='in-range'>
            <max>9</max>
          </filter>
          <slices>
            <column>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:total_red_card:qk]</column>
            <column>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:total_red_card:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0oyvh401d8i2s4178mcjd16ikzmk].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[Multiple Values]</rows>
        <cols>([federated.0oyvh401d8i2s4178mcjd16ikzmk].[none:team:nk] / ([federated.0oyvh401d8i2s4178mcjd16ikzmk].[tyr:season:ok] / [federated.0oyvh401d8i2s4178mcjd16ikzmk].[:Measure Names]))</cols>
      </table>
    </worksheet>
    <worksheet name='Stepped lines'>
      <table>
        <view>
          <datasources>
            <datasource caption='stats' name='federated.0oyvh401d8i2s4178mcjd16ikzmk' />
          </datasources>
          <datasource-dependencies datasource='federated.0oyvh401d8i2s4178mcjd16ikzmk'>
            <column-instance column='[team]' derivation='None' name='[none:team:nk]' pivot='key' type='nominal' />
            <column caption='Season' datatype='date' name='[season]' role='dimension' type='quantitative' />
            <column-instance column='[wins]' derivation='Sum' name='[sum:wins:qk]' pivot='key' type='quantitative' />
            <column caption='Team' datatype='string' name='[team]' role='dimension' type='nominal' />
            <column caption='Wins' datatype='integer' name='[wins]' role='measure' type='quantitative' />
            <column-instance column='[season]' derivation='Year' name='[yr:season:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0oyvh401d8i2s4178mcjd16ikzmk].[none:team:nk]'>
            <groupfilter from='&quot;AFC Bournemouth&quot;' function='range' level='[none:team:nk]' to='&quot;Wolverhampton Wanderers&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[none:team:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0oyvh401d8i2s4178mcjd16ikzmk].[none:team:nk]' />
              <lod column='[federated.0oyvh401d8i2s4178mcjd16ikzmk].[none:team:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='line-interpolation' value='step' />
                <format attr='size' value='2.1104972362518311' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:wins:qk]</rows>
        <cols>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[yr:season:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Total Wins and losses'>
      <table>
        <view>
          <datasources>
            <datasource caption='stats' name='federated.0oyvh401d8i2s4178mcjd16ikzmk' />
          </datasources>
          <datasource-dependencies datasource='federated.0oyvh401d8i2s4178mcjd16ikzmk'>
            <column caption='Losses' datatype='integer' name='[losses]' role='measure' type='quantitative' />
            <column-instance column='[team]' derivation='None' name='[none:team:nk]' pivot='key' type='nominal' />
            <column-instance column='[losses]' derivation='Sum' name='[sum:losses:qk]' pivot='key' type='quantitative' />
            <column-instance column='[wins]' derivation='Sum' name='[sum:wins:qk]' pivot='key' type='quantitative' />
            <column caption='Team' datatype='string' name='[team]' role='dimension' type='nominal' />
            <column caption='Wins' datatype='integer' name='[wins]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0oyvh401d8i2s4178mcjd16ikzmk].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:losses:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:wins:qk]&quot;' />
            </groupfilter>
          </filter>
          <computed-sort column='[federated.0oyvh401d8i2s4178mcjd16ikzmk].[none:team:nk]' direction='ASC' using='[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:wins:qk]' />
          <slices>
            <column>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0oyvh401d8i2s4178mcjd16ikzmk].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[Multiple Values]</rows>
        <cols>([federated.0oyvh401d8i2s4178mcjd16ikzmk].[none:team:nk] / [federated.0oyvh401d8i2s4178mcjd16ikzmk].[:Measure Names])</cols>
      </table>
    </worksheet>
    <worksheet name='Total goals'>
      <layout-options>
        <title>
          <formatted-text>
            <run>TOTAL GOALS</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='stats' name='federated.0oyvh401d8i2s4178mcjd16ikzmk' />
          </datasources>
          <datasource-dependencies datasource='federated.0oyvh401d8i2s4178mcjd16ikzmk'>
            <column caption='Goals' datatype='integer' name='[goals]' role='measure' type='quantitative' />
            <column-instance column='[team]' derivation='None' name='[none:team:nk]' pivot='key' type='nominal' />
            <column-instance column='[goals]' derivation='Sum' name='[sum:goals:qk]' pivot='key' type='quantitative' />
            <column caption='Team' datatype='string' name='[team]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:goals:qk]' />
              <color column='[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:goals:qk]' />
              <text column='[federated.0oyvh401d8i2s4178mcjd16ikzmk].[none:team:nk]' />
              <text column='[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:goals:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='Wins yearwise'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Wins yearwise&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='stats' name='federated.0oyvh401d8i2s4178mcjd16ikzmk' />
          </datasources>
          <datasource-dependencies datasource='federated.0oyvh401d8i2s4178mcjd16ikzmk'>
            <column-instance column='[team]' derivation='None' name='[none:team:nk]' pivot='key' type='nominal' />
            <column caption='Season' datatype='date' name='[season]' role='dimension' type='quantitative' />
            <column-instance column='[wins]' derivation='Sum' name='[sum:wins:qk]' pivot='key' type='quantitative' />
            <column caption='Team' datatype='string' name='[team]' role='dimension' type='nominal' />
            <column-instance column='[season]' derivation='Year-Trunc' name='[tyr:season:qk]' pivot='key' type='quantitative' />
            <column caption='Wins' datatype='integer' name='[wins]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:wins:qk]' />
              <text column='[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:wins:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-mode' value='all' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[tyr:season:qk]</rows>
        <cols>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[none:team:nk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='Measures'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{BD4B8EBA-7765-4429-A25F-7BE5318FFD18}' />
    </window>
    <window class='worksheet' name='Box and Whisker'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0oyvh401d8i2s4178mcjd16ikzmk].[none:team:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{1C621F69-CB92-4B95-A764-1D6ACD0BFF86}' />
    </window>
    <window class='worksheet' maximized='true' name='Wins yearwise'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:wins:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{8E813DA2-FBBF-4BBA-86AD-DCB258656A5B}' />
    </window>
    <window class='worksheet' name='Total Wins and losses'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0oyvh401d8i2s4178mcjd16ikzmk].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8F6451D0-9127-4504-8E85-F8CF100E6927}' />
    </window>
    <window class='worksheet' name='Stepped lines'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0oyvh401d8i2s4178mcjd16ikzmk].[none:team:nk]' type='color' />
            <card param='[federated.0oyvh401d8i2s4178mcjd16ikzmk].[none:team:nk]' type='highlighter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight field='[federated.0oyvh401d8i2s4178mcjd16ikzmk].[none:team:nk]'>
          <bucket-selection>
            <bucket>&quot;Manchester United&quot;</bucket>
          </bucket-selection>
        </highlight>
        <default-map-tool-selection tool='16' />
      </viewpoint>
      <simple-id uuid='{38B342F9-A44D-482D-8743-2493C376C9B0}' />
    </window>
    <window class='worksheet' name='Man. City Total Wins and losses'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0oyvh401d8i2s4178mcjd16ikzmk].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[:Measure Names]</field>
            <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[tyr:season:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{32F0A5FC-2DB9-4679-A526-4A19B675DD7D}' />
    </window>
    <window class='worksheet' name='Man. Utd Total Wins and losses'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0oyvh401d8i2s4178mcjd16ikzmk].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[:Measure Names]</field>
            <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[tyr:season:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B7179B43-B87D-4CD6-AEB9-93DED4DD8B0E}' />
    </window>
    <window class='worksheet' name='Attack'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[none:team:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;Manchester United&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
      </viewpoint>
      <simple-id uuid='{6A0EF194-7764-41C8-867C-AA1DFFB68A93}' />
    </window>
    <window class='worksheet' name='Total goals'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:goals:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[sum:goals:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4BCF0226-36FE-4CAC-8CC9-7F97525C3442}' />
    </window>
    <window class='worksheet' name='Goals scored | Goals conceded'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0oyvh401d8i2s4178mcjd16ikzmk].[tyr:season:ok]' type='highlighter' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{54C40101-D314-4E1F-9820-0E60C3A96CD6}' />
    </window>
    <window class='worksheet' name='Pie Red Cards Yellow Cards'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.0oyvh401d8i2s4178mcjd16ikzmk].[:Measure Names]' type='color' />
            <card pane-specification-id='2' param='[federated.0oyvh401d8i2s4178mcjd16ikzmk].[Multiple Values]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[:Measure Names]</field>
            <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[none:team:nk]</field>
            <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[tyr:season:ok]</field>
            <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[tyr:season:qk]</field>
            <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[yr:season:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9FB6CDCB-B6D3-4CC4-B21E-43E5261CA77B}' />
    </window>
    <window class='worksheet' name='Red Cards Yellow Cards Yearwise'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0oyvh401d8i2s4178mcjd16ikzmk].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[:Measure Names]</field>
            <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[none:team:nk]</field>
            <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[tyr:season:ok]</field>
            <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[tyr:season:qk]</field>
            <field>[federated.0oyvh401d8i2s4178mcjd16ikzmk].[yr:season:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CE4C8FF1-F52C-4006-83C1-B28E5D1E887B}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Attack' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Box and Whisker' width='192'>
      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
      C8tIMDTYy7ipse6eBxjuPYKVClJW62Rp29JrKoDbafKdHxxj05IGkjkDW0ZybGCIDz3yEOEz
      pxkcCTPSf4IszXzowQ3EhuJ0jg0S6+gmmc3hr27g//zC5/GaLu5c0chYLsPoUA+dA1Gyhs7q
      1UtYt2oZh06dYSCn87H7twLMXAEUfcIaF+u+pACaA5Y8AfbCucPPGwUQLheuTZtA1xlRFNo+
      9jH8v/xxxA36FeXSMTr7h3CVVxH0CQ6f7GXVutW43G7OHN1DbX0Zr+3YxcLWNgJuO263m2B5
      NWUuizPD4yxZtYyMp5quc3Fc5fXUbv1lKqoa0GSOkXAHR7tCbFy3mtNd51iydBE1tc00NFbS
      0dXB8iVLqaqtwmu3c6K7lypfNdXVk1O6HNyzneFEkrbmVg7u2YmhllPbUIHfYycYsPPS9h2U
      De7AlzpJXhHcEYywyv06sn4Vw0mDVD7HguaFlFVWo0iL/u5jnBuOsnH9BpRrDDa700VX72ke
      um8lh0NjLKitYEGdj91v72Y0LFHycRRngPrmVupqg2RsoyQy76EHaqmq1Fm61EBJOlhY20RZ
      0I2w2fFW1REd7aO2oQ5SccIpDb/HTS7cQUffMG0LZhE/IARn25OcOTTK0Fga1SjjeFctgcUr
      cHgLtwkueomk6/n8/v372XhFiNxMuPDVLjyEy7/q+z2Y3bt3s2XLlknXXX6/ib+LS+nDpQQh
      LuYwmPjnNH3IiZo3F+5x5f1l/BzJf30caRnsHfWzsWLCS1Zf8THsD/7JFNmvlONGiPR3s+fg
      MRbfcRcLGysu3jtv5flexzcYzYYZPTZG+YqJN26ts5FPL/rSpJoN09X1vfJ3nwm5VIbXv/Ys
      uVSW7vF+Wrz1ANSvamH9p++Z8X2v5CaZQS1e/ulTZG21PPrhD6IJSI2N0nlmFJRCJD+1ePEn
      3yVqBdm2dT02p5uasql+RX2nz1LXtmDKm3PfiRPA1Ad4+b/zySjPv/Q89Qvvos5jQwl6qb+Y
      I/MaA1JcKvn3D1//O+KZDKlEHK93wsAoU6NEO2sQQmLXNZ7vdFPmUVG7OpB7/gzTUnG5Jxxy
      NE3j93//92/85zlPWX0Lj9a3cOzd7XxvV5jVG+5jVVsNeStHwpjsnp4ND9PtdWBJa5ICTDfI
      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
      BDbkfv8P/ibXW+JlY70AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Goals scored | Goals conceded' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Man. City Total Wins and losses' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Man. Utd Total Wins and losses' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Measures' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Pie Red Cards Yellow Cards' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO2deZwUxfn/31XdPbMze7HLLvclh4AHoAiiIMrXI+KBYrxiokaJ4pFoNIka
      Y76J31/URI1H0KgxGjVeEI3xxgMUbxAhXHIj97WwsNdc3V31+2MWRVlgd3bOnX6/Xr7U3enq
      Z6f7U0/VU089JbTWGg+PPEVm2gAPj0ziCcAjr/EE4JHXeALwyGs8AXjkNZ4APPIaTwAeeY0n
      AI+8xhOAR17jCcAjr/EE4JHXeALwyGs8AXjkNZ4APPIaTwAeeY0nAI+8xhOAR17jCcAjr/EE
      4JHXeALwyGs8AXjkNWamDWgVWrOrpIUQIpU3QiuNFgKZ0vvkF98qSNL4LIUQe32WWmu0Uggp
      k/a8c9oDKBVlzrQ3+WjeKlyVyuouimXT32buhvoU3iOf0NRv38D7777Fq6+9zpzl61mx8BOm
      zlzMvp6iCm9j6suT2dAQS5olOS0Au2YF99zxW26bNJk6203hnTQbZs5g5XZPAMkgsnMTUx75
      I8+/M4sNXy3i/TkrWLdyHjO/XM2+qlRpu5YP35vO9rCTNFtyeAik+Orjt6k46jp61H7CfzeF
      OK5rmAf/8DDBA7swb349V/zkBN585jkWrq+l/+jTuPKMw5nx/GO8PGsVRRUDmHjtpcSWTefF
      d+fi1K9lbaQTv/l/v0Yt/ZDnX5zKumqHQWMu4JofjwITZE53F9nDqgUf8HF1D269+Wo6l/pQ
      WjHr1cWsm/U6v5v/Emsi5fz2D78hsGUBDz78FFsifoaPu5gJx7YHUYBAsXnhxzz4xItsqo0x
      bNyPuejoSv796CO8/WUVnfsdyfXX/oCtc99h8r/fZv0Oh8OOv5CrLzoG4zu25O4jdWuZ8clS
      hp19Et8bGGTGp8tR2mbpnJm8MWMhQ48czKovPuSLugp+8avLOergHmxe+V+mLQpx5S9vYHC7
      LcyYs4S6HVvYXAunXXQlfYJVzFtTTaC4G6eefymXn3cMs157ne3J63A8gNrqLfTq15f2pUEM
      w8QyDATg95cz7qIJ9AlsZc7yVbz+0lS6jbmAX19yEp+99OI3z0FFmDF1KjVdhnP9tRdzcI8y
      Fn02nVk7O/H7W6+nYtvnfLa6mkBJd067YAKXnzOSz157ne1NDBJy1ANo6jcs4Yt1Wwm++Ryr
      1m1gBe+z9bRzCVR2YcI1N3PiQZVsW1XCp/Oe4d77/8bAo8ZxQp861q6YzyOT7sNpqKO8soYB
      FdDl0GEMH3Qw89u3JxaNULVpLpPfmYvjhNm+M0qdJ4CkYhiSUEMDjqvAiPfBMaDToGEMHXww
      c9+soG7HTrZtXMKXKzezOCBxYprQrhdYBhhxwmg++cfL/PnBTznmlB/QM9LA2sUf8+e7l1K/
      ow65toqOzhwmT5uHY4eornGpt6HDd1xAbgpAK5bPn4/sMpSTD+sLg7qw6YU3WbhmB45lUt6+
      FEMABeX8+PKfE1o3k7smvcfwK4ZT0qEfF191ORWqhnCwCzsWrmJXLMkEdLSemXNWMfq8Kzgs
      sJr/veNFhFc9Nal07TOE6pee5t1PD2FYzwCbQn40fGsCbPkDBNt3YfCAUzj/mH5sXLGewl3j
      Fe2ggz34xQ03smnOy/zlmQ+YcE4Zxd2HcO2vfohdtQ7alfL2U18x5oKrOdRczu/ueoWm4kY5
      KQDlRFi9eTtHnngKJ594OKBoWDaXDSs3UlZaQsASgGbHui94/Ll3aIi59DhyNAMPHcbxA7/g
      nw/cg3aDnHDhZXT3B6koCQCComARgdISKjuU8J/HJvFxiSAmy/EZUBAswm/k7ogxm+jY53B+
      8v0VPPzPB3hdO/Q97kKOax+gojgAQlBSWISvtJJRZ57O3Y+/xJ2fAUUD+e0RfSkuLcOUmi1L
      p/HsWwuIRRsYfNIPGXpUbxbNfpA///FPqEiQC3/1U/pWFvPqo/fxQTE4RjlWE49PtPXq0MqJ
      EXUUfn8BUgAoopEY0vJh7fWFdgmFo1j+YJNfmkdyUK6N7Uosy2h8NnuiXYeYFljGnp9xYlEc
      LfD5fF8/20g4huX3Y0hBc55jmxeAh8e+8Po3j7ymyTlAbW0t1dXV6bbFwyPtNDkEUkrhuqlc
      WfXwyA68OYBHXuPNATzyGk8AHnmNJwCPvMYTgEde4wnAI6/xBOCR13gC8MhrPAF45DWeADzy
      Gk8AHnmNJwCPvMYTgEde4wnAI6/xBOCR13gC8MhrPAF45DWeADzyGk8AHnmNJ4CWoHW8Rv1e
      dpHu+p23xzTzaK2JRSNEYs7X/+/EokSisW89P08A+0DF6nh/+lss3hgvi75z/TJefP5xnn3p
      Farq7W991g7X8tE7r/DM488wc95GHJUJiz12EdqynN9ffgZX/+VNQLFx/jR+d81Ezrn6PiKO
      J4BmoFj17stMeeQups7eBIR55f/+yOo6QdWKT/nrP98gvNtLPueD13nu7UWYdh1PPDeFVdsa
      Mma5B8z66N+YB4+msrwdoImEogw+ehglXYKeB2gODdtW87e5X3HGVT+mJqqJbZjFVHc8P/vJ
      JVx+yUTa6yWs2x7++vObVs/hrMuu4ryJl3JascH6tVsyaH0+o6he+AZPf1jJVT8YjSklIOk9
      4hROGDGQYEnBtz7tCaBJbGZP+Ttd+p/BkZ0KsQyJitbT6/ie+KXAX1hCQbtuhHc7qaTALKa8
      XRAhTNq3D1EVqsug/flLrGY9D931PGPPHkaoqorVazZSXR+BvZwp5gmgCWpXzODh17bTt1Md
      n8yex4wZn7NxZ5jwzhAKcJ0o4YYqhPHNl6q0i+04oDW2KqG8qDBzf0Ae49qCbkMPZ/Xn03jh
      1XdZ9N77zFy8GQUIFI7+puCbY0dzszx6qjFL+zPhmvHUb6siUhPC70RwS/sTful5Vl1wGP4N
      S9i6sZaO7fzU7NiOGSghLCw+m72Mwcd34tM1Wxg5OpjpPyMvCVR05+Jrfg6AveljdhwgGDu0
      Ax898w+mfjGDjxdVcacJJ48/G//i/3iV4fZHw8rXefDLgdxwek8+evRe7p0yDV0a5JIb7uZ7
      gyt59u676Hrs5RzSYSO33Xk/K9eHOWTUD/n19eMoD3r9SyZRsVrW74QelQE2LF7KutrGQw59
      AXr0OZCC+g2eAFqEVkTCIVzpp7DA2uPXTjRK1HUpCAb3OIzNIzvxBOCR13g+2iOL0GhVj9Y1
      oHagdR3oGFrHgBha16M/s2FLASIQAJ8PfBaisBBRWoooLkKUtYNAANHMM23brAC0VmhVhVab
      QdWidQh0A+gQ6g0FscYvMRhEFBUie3RDdOyAsKy9hsw8ko1G6zDK/hJlz0K5q9HuerTahna3
      ovUO0BHQUcAGNM6DAv1i4/OxLCgoQJSWINuXI8raITpUIrt3wxh6GMaQQ5F9eiN8vr1akNMC
      0FqDDqH1DrS7CeUsRjmL0M5ylLMCraoBB1DEzyBUoDXOrQK9UoCQIOP/FpYJfj+yR3dk394Y
      hw/GPGIookMlorICUVqCMHP668o4WivQNSh3Ncqehxt9H2XPRKvGF73xJW82tg22ja6rw12/
      4ZufSwl+P8LvQ1S0xzxuNObJJ2AMOhTZsRKKixGNnVxOzgG0tlH2fJT9Bcqei3KWopyFoOub
      db19rIDlzejlfT5kj27IQw7GGHwo1phjMA4bgigu8rxES9AK5a7Bjb6BG/sEN/YBqO0JNeX8
      bDcP0BKEQA7sj3Xp/2BNHIoROBYhO+aGAOImRtDuFtzYJziRKWh7AVrtBML7u3wPmi2A3TFN
      RPtyZNcu+G49E/N7JyKNXghR4omhCeK9fT3KWYDd8CjKno12NwKRVrWbsAAABJi3d0NcXIM0
      OmMUjMv+IZDWMdzodNzoW7iR19FqfWYMcRz0lq24O7bhFG7E2X4Xhu9YzIIzkf7RCNn1a7ea
      72hVixudjhOZght5i0Q6qVQgehTBoB1AHcqtQTUsyU4BxHv8GCo2Gzv8GCo6Ha2qaNH4MEXI
      UR3QnaoROoIbfQ039j7SPBAreDVGwckgShEi/zJM4s/MQUXfxw49ghubCTqxYU6qEAcZiAHf
      zlPPOgFoHcaNfoQTegw3+hrxCWyWYErEcTFE6TdJcOh6lD2HaM0ERH1/rKJrMP2nImRl3gyN
      tFYoew5O6B844aeALDxg0RTIsQEIbPz2jzNkTpModwtOw/044clotSnT5uyB6BpAHilBOE3+
      XrtLidXegOt7A6voOgzf0Wm2MP1oVY8Tfg674QG0u5Ks6rB2xwT5PbHHGCIrBKBVDU7kBez6
      +9HuKrL1SxT9BRy0n40uugE3+jpu7APM4MVYwYlIs096DEwjWrso+7/E6v4XFfuIeAgzezHG
      dUMXrdnj55kVgNYodw12w304oadobYQg1RjnVYKxsnkf1nU4DQ+hYnPwldyKtEYgRNvIENI6
      iht5jVj9HWjny0ybs38EiJNtaGJEmjEBaB1F2XOI1VyLcpYQX7DKYkp9MGJbCy9yUfYnRHdc
      jFk4ESs4ESFLUmJeWtAaraux6+/GDj0BuibTFjULMaQMBja9QSkjAtA6jBP6e3zIozbu/4Is
      wDi3CzThQpuDVhux625Fu5uxiq5DGl1psjvKcpS7Brv+VpzwC2TlRLcpBMghGtG16Q42rQLY
      lbpgN9yD3fAA6BzZNhgw4IhqMFszN1E4ocdQ7kr8JXchjL45s24Qz6vaSrTmSlTsE3Lm5Qco
      thDHF4BZ3eSv0xqw1morsbqbsOvvyZ2XH5CDi5EjDBCtXYeIoaJvE91xMcqeE18tzXJ2hTij
      O3+Eis0g2ye7e9BBIkbtfW6ZNgFoVYdddwtO6Gkgmq7bJof+CtrXJq055cwnVnsd2lmYtDZT
      hVbridX+HBX7LNOmJIRxSifwNd37Q5oEoNzNRGuuxgk/R869/KbAuLI9yGT2fAplzyZSfS5u
      7Ius9ARaa5Sz7Gtvla2h6X1SYCBP33fYOvUC0C52/R24kVfJxS9RHFAM3VMzUddqHbHam9DO
      spS03yrU1niM3/4i05YkjBxRge60b8+dUgFoVUes/nac0BPkXM/fiHFpexCpSubSKPtTojVX
      oN3sKaSlVQ2xuhtxI6+R9eHpvWEIxMgYomzfE/aUCUBrByf8LHbDQ+TcxGkXnQIwqCrFN1Eo
      exaxulsbN/BkFq0jOKHHccK56bF3IToXIEdZ+x26pkYAWseXyetvB70zJbdIB/LIQkS/9NzL
      iUzBDj3WuP81U2jc6HvYDZPIlhTmhOkOHLz/+qwpEYBy1xCr/TWoVPeeKcQvkSNcKEpTuFaH
      sOvvwo2+S6bSvpWzlljdb+L7qHMc40edwNz/s0u6ALSqx254EGV/nuym00upgTg1QFpfRl2P
      XX8nylm91zMIUnTjeJi64e7snJC3FL+BOHJHsz6adAG40TdxQo8AmXTlrUeOKoOKDfv/YJJR
      9mzshj/HK1ikCa01buQVnPC/yOVx/y6Mc7tCefM8d1IFoNwt8RSHXI0c7IY8u4DMDEUUTvjF
      xhTjNKEbsBv+Ajp5i30Zw5IwpAb8zUvXSJoAtA7jNDyIsv+brCYzhhhSDv0yOA7WNcTqfo92
      Uz+H0jqG3XAvylmQ8nulA3FQEfIYE0TzPFnSBKDs+Tjh58nZkOduiBEC0SGzNihnGU5kMlqn
      1psqex5OeHJK75FORD8NnZsfuEiKALR2sRv+mrmKDcmkwo88ToCZ6c05EZzQP1M6KdU6jBN+
      Hu0mluadjRgXV4DR/GeXFAHEq3xNTUZTGUd0FojhTlak6ytnAU7khZS1r501je3n/sQXgA4B
      GLy1RZe0WgDxXuTJtEYtUokcVwkFzQuhpQMn/HRKVoi1VjjhZ3J7reY7GOd3BqNl6zatEoDW
      GhWbixuZSpvoRfwG4rQo2VB/aBfa3YwdejrpGaPKWZJS75J2SnyIo1teh6iVHkDjRt9qG2N/
      QI7uCOWZz8f5Ng5udGpyV2e1ihcbc3N/xXcXckgxYiAtHrq2TgA6hB1+mmzqMRPGkogTo4ii
      7Nvup+zZqNispK0OK1WFE51Krmbo7oEhEENtqGz5OkarBODan0EWFrBKBNGrEDFUg8g+AaDr
      G3OEkmObdteg7NlJaSsrCErk+DIS+X4SFoDWMZzws4lennWIARpxYCjTZuwVJ/JS0jJr4221
      gVXfRkSfIPRJbNNS4gJwlreJVd9dGD+oBCN7BYDegRv9sPXN6DBu9M0kGJQ9GBdVgkhsOJeQ
      AOL7RRej3bYx+aXUB8NbWvQq/bjRd1sdDVL2IrTbslh5VlMZgEMSn8wn6AFslD2v2SeyZDvG
      hd2gIPuHBMqZ18o5l45Xd9BZ7OlaiBxTguideHAgMQHoCK49J+GbZhUBEzF0WxJq/qSe+Dlo
      iadGaB1tTHrL7VT1rykwEIMjEEh891piQyC1M/c3vDQih5cijpBZkfqwP7SqQjnLEg6Hancj
      ylmcZKsyh+hoYowLNjvzsykSEoByl7WN4Y8EcZADZblSpc5pLB+fWA8eP360jczbAHFoIbq8
      dfOZxDyAnf0VzZpFgcS4uF2Si16lFmUvAJ2Yy4+fm9yGcn8uKQHRumeXmAdwmlkjP8sRB5ag
      u+fWQp5yV6F1YiE/7a4mpwrb7gPRpwR9QOtTOVosAK3d+BCoDWBcVAYi03n/LUO7mxoPlW45
      ylmaZGsyhxxbiGjf+s1CLfcAegc6wUOOswnRtRAG5WI83EarxKrIaWd5km3JEGU+xOENYLU+
      mtVyD6C2J9wDZRNiZCGiV/aHPptCu+sSuk61lbytA3yIo6yktJWAAEKQ4n2qqUYETcSIGARz
      cxNPwqnRKleiXftGHhOA0uSs3CcwCY6Q82VPyg3kiWkuepVEdKJRoLYQugbk2YUk69klMAcI
      kesCMI5tB+3TX/QqaSSw/VRrO+HwaTZhHNUB3WV10tpr8RlhWkfQOrdDaeL7/kyb0CoS8gBt
      JP9HjLUgiY+vxR5AYCJEWo8WSz7liU0iswVBQQIX+ZJvSCZot6FVqQ/fpeVvsggAOX7gcxK/
      wIwgi1p8iRAFZPpc9KQgdFLzthIUQBv4InMYIVougPhx6YVJtyXXafkQSARAeALIKKI4sctk
      Yte1ZRLwAEVAchYhPBJDyPIErytNsiW5T8s9gNEJIUtSYYtHszCQZu+ErhRGms57yiESGAL5
      EbJrKmzxaA6yAkRiHZA0EhNOWyaBeKZAmgOTb4lHs5BGb4RILBAuLe+5fZeEAvrC7JtsOzya
      iTR6AInF9IXs5EWCvkNCAjCsQ8n5tYCcRCDM/iASWAgDhGyPkF2SbFNuk5gHMLoivPFk+hHt
      kNZBiATD0MLojPS897dILKdBBJC+I5Jsisf+EEYnZGsiOaId0hxAqs5Hz0US/CYKMKzheCvC
      6UUavRAJhkABhDCQvqNABJNoVW6T2BBISKTZFyHbJ9sej30graEJR4C+aWNIwnOItkjCvlBa
      hyHMg5Jpi8c+8WEGzm51K9LohmEdmQR72gYJC0DIMgz/mGTa4rEPpHU4wuiVlLaMwFlJaact
      0IrZkMAsOI+k7k7w2AsmZuA8kjXnMqwjEd5iJtDKcIAwuiB9xyTLFo+9IIxeSN/wpG1EEkYn
      DN8x5ERB1BTTym9UYgbOBwJJMcajKQSG72ik0T+JLQYw/CeAKEtam7lK6zyAEBj+45A+b1KV
      MkQQM/gThExi6FIIDN8YDOuw5LWZo7TapwrZCbNgPInmp3jsG8N3bDx0mWSELMQMXkq+D4Na
      LwAhMQMXeAlyqUCUYRX+NOHUh/1h+McgfcempO1cISmzKiELsYIT8BLkkovhPw5pDUrdDUQx
      ZsHZeZ0hmrSkELPgLAz/WPLdpSYLIbthFV6X0omqEAZm4EyMPPYCSROAkB0wCy/zIgtJwgxe
      gGEdjhCp7VCELMcqvJ58Xc9JXlqgEBi+4xrDop4XaA3SGo4ZuBTSVIBM+oY1Tojzbwib1G9Y
      CAur8GqkeUgym80vRDlW4c8QRvr2XQthYhVelpfPLeldjDB6YBXdiJAdk910HiAxgxdhFJyC
      EOnsjQXC6ItVdF3epUonXwDCwCw4A7PwZ6lovg0jkP4x+IpuiBcfS/fdhYkZOAczOIF8qvuU
      mjdUGFjBS+LL7R7NQhgH4Cu8CUQmi1eJ+BDWNzKDNqSXlHXRQpbhK7kLw3dcqm7RdhBl+Evv
      xfCPTHnUZ39Iowf+kjsR5oCM2pEuUjpGkWZffCV3IIyeqbxNbiNK8RXdmFXeUloH4yu6JV6E
      q42T4kG6QJqD8JU+hDAOTO2tchFRhFV8M2bh5WRX6FhgFJyOr+SPbT6YkfpZqhAYvmPinsCr
      SbMbBVjBiVjBiY21+7MLISzMgnOwim6iLS+SpSVMI4SB4T8RX+kkhNGX7OrtMoAowyq6Aavo
      l4gsPrlFCAszeCFW0Y1tdoVfaK3TdlSi1gplzyRWewPK/iJdt80uZAW+olswg5emLMsz2Wgd
      xQ1PJlp7I+iaTJuTVNIqAAC0xnXmEqu5FmXPBXL8uKIWIGQXrOJbMAPnZ+WwZ19o7eCEn8Cu
      uz3xc4qzkPQLoBHlbsKuvwcn9DiQ+8d37hsLaQ3FV3oPRgo2t6QNrXBj7xGrvRnlLMi0NUkh
      YwIA0KoeJ/R3Yg33gdqaKTNSjMQMXopVeA3C6JPxOH/r0bix2dj1t+FGpwE5fmRuJgWA1mgU
      yllArPYmlD27zZxnCxJpDsAMXo0Z/BECE3L+5Y+jtQZdj90wCTv0MKhtmTYpYTIrgN1Q7ibc
      8L+wQ39Fu2szbU7rEIWYgfOwglcgzIFpTmxLH1pHcSOvYTdMQtmzMm1OQmSNAAC0ttHOCuyG
      e3Gib+fesEgEkdbh+Ap/gfSNRCRwnm+uobULqgq74SGc8GS0yq3OK6sEsAuto7ixD3FCz+BG
      3wW9PdMm7QcjXmak4HTMwPcTPsUxl9HaRdlzsRvuaXxm9Zk2qVlkpQBg1zizFuUswW6YhBud
      0RiDdjJtWiMy3uObh2IGJ2D4j0fIijY73GkuWlWjYrOxQw/hxj4G3QBk5SsGZLEAdkdrF+Us
      w428hBv7EGXPA70zQ9b4EOZADN8IDP/JGP4xWb2amym0jqFin+KEn8aNTm9cO8imV81AmAfm
      hgB2obWLVltQziLcyJu40Wlod3l6bi7i1bCNglMwrCMQRi/vxW8GWtWhnAW4sY9xQk+i3VUZ
      tkggfcdiFpyJ4Ts6twTwXbTWaHc1rv0pKvoeylmFVtvReieonUCshS1KEKUI2Q4hyxCyO9I3
      FMN/ItIc0OrDKfIdrWMo+7844WdQ9gK0Wo92twB26m4qAgjZFWF0xfCPwSwYjzD6fr0ek9MC
      2J14NGIbWm1GuVWgt6LcdfEvWNWiCYGuR6sQ4CJEML7/VRQhRBBhdEAY3RCyE0J2QMhKhNHZ
      e+lTQNyTV6HdFShnKSo2F9eehXZXJ2HyLECWIc2BGNYRSGsIwjwwfryU3DOhr80I4LvE/yy3
      8R8FWsf//XXukSDe48vG/zYAs3Gtqm0sWOUCWisgBjoC2Ch3PdpZiXKWot21aF2LVnWNk+lY
      /DkKA/AhRBHIYoRshzT6IczecU8tywA/CD9g7XP1vc0KwKNtEX9NI6BdED6EsEhGR5XZXCCt
      0UqDFAghELt+puOl15uVOaA1SisQEtlGUg080kcGE9JtVs1+mVffXYH0deP8q86jOLyZZ194
      leqdYQaOPJGxIwdhxHYw+aGn2Az4S9pz/Knj6dchXsxVa8WG+Z/w8kcfYpX2YfyZ46ksyp+S
      HjmP1th2DFeYFFiZWT/JTOEerdk07xVufWM2hw4fxkF9O4NTz6MPT2araM/hQ/qxdNJdfL45
      RnTTTN5Y7+fAAf3pe0BPigu+0awT3saUOx6ltMdgohvn8eRL04kpb0SXahZ8OIVx48Yxbtw4
      Ths7lpsefQvl2mxZNZffTryez9fUAaCjW5n00yvinz3jDF6Ys2m3VjSb5k/npxeO57yLzuXT
      ldVkYiySEQ+gVYRpb1Rxcr+xlJeWUDqgBxV+geH4qOh2AP36FbPk4E44rqZq2TwKDz2Ggw/q
      SXmHjhT5vzG5bs1MFve8jGtPH0VoSGf+OvVzdoYcOnheIKUcMvJsXjzyTLSyeXPSvWwrL2Lr
      4g944I1ZhLcsZ1l1mGE9iwlv+pJVg87ihfv/B1yF6ftm3URFNvHAL6cw8cl/0dtdwk1/+hNd
      /3gbPYrS+0pmRgCuw9a6uXw2fRXh0AF89PADXHbznYwf25HTbrqFRZ1LmFM0kh939lO3oTeF
      X8zh5Wf+w+JtBr+6+fccUB4PTQoVocfwjhhAoKQMrPa4jks+VTbLBEJKLJ+PUNUGlm6v4aTz
      B1HZOcCtA45jSuHPUY2BtrqqdazdvJO5n5fR8YAD6dXxGwE421ZRPer7DO5SCLGBjBpazleb
      6+nRt11a/5bMzAGEwFd5CBd8byynjezFqYf4+MO0WZQs28B99z/B8D7FfPzU9Tz50QauHHUW
      tx+m0Mrl/X89zvNPzueG64ZhEC/nV1dViwKiDTXEIlUI6ZVjTA+KxTNeobbiDA7qVoTRGIBw
      9TexmeKeo5k4dCFrl8/kkT/fwOhLn+SisT2QxLdYtutZiAFoKQkWV6Ji6d9ck5G3RZp+BrUT
      LF26GNMU1G//iqBPoHwOpmVR4LcwnEKiTpTls+awLaLx+Q0aIsuRXf1EarexdUcIf+WBhF6Z
      wtqdUZYunIeKmhQFcmOjea6jGtbx3L/X8sMJw/HtFn3bfSob7NCTk049lXMu/CkP3vsbpv9r
      7tepjNIXYOPcjUQB17Gp2ziXYGH6Fx0z5AFMRowfx+rf3MappzxErMdh/PX2o1GLXf73liu4
      LRSm99DT+O2E7sS+XMml55+FIaDiiNP5v18MZOm0+/lw00lcffkAvj++kl+ddyb+7r34+c1/
      oND0PEDK0Q6zX3uOitNPp3+ZD7QmtLOKdeu3sHTDWuxlC1nedTCsWcLC7TZ9u1w92XIAAAEe
      SURBVLdj6ftPUTrmemKbF/HxyiDHjjiIUdv+xvNvdKWvXMan6/pxWuf0H9WU4XUARSgUwucP
      YJnxvkM5UaI2+Pw+DBnvWZRrYzvg85l7ruppl0g4jLYCBDIUSss73DBvvzmH3kcMom+nYtCK
      tXM/YPILb7Oj8SOdRp/NJUdU8PiTz7B+UzVWj2HceNW5qNXv8J8PK/nRJUNoWLOAhyf9g2pf
      IZdddzP9KjNQFdtbCfZIJVprlFJIKZvovDSu66KQWBny3J4APPIab8Dskdd4AvDIazwBeOQ1
      ngA88hpPAB55jScAj7zGE4BHXuMJwCOv8QTgkdd4AvDIazwBeOQ1ngA88hpPAB55jScAj7zG
      E4BHXuMJwCOv8QTgkdf8f+TcJb3WlLunAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Red Cards Yellow Cards Yearwise' width='192'>
      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
      S+VZsnIAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Stepped lines' width='192'>
      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
      WtlrVooAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Total Wins and losses' width='192'>
      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
      naWmSXNzM8+ePStFd9ve12hvb+fu3bv09fUdaO6jeKj1uXPnmJmZ2XeMXTd1bk1vO9PXC7+e
      /icutl1h/yVq30zeGAeoFx0dHTx58oREIkFnZ2fNcsPDwwwPD1MoFFhfX69JRgjByspKaalA
      aaRDCJyyzA9v3tz+cOnPjY0NMpkMHo+HEydO1NyUDIVCCCGYnZ2tafufZmj8n3f+fcX1f/2T
      f2c5wDeVtrY2fvCDHwBbkzm1Mj8/X1q7cu3atZpkcrkco6Oj5PN52tvbS23y/JOnRP/1H5U9
      K3d20vVv/w2wNSR348YNkskkjx49qqm5BVtNoFo3f1tU52vjAIVCgV//+tdbw1qmWdOyWtia
      LX3+/HkpGG6tjI2NcfPmTZLJJC9evKgpzJ7b7aazs5OTJ0/y53/+51y8eLGmeZDikGh7e3vN
      E2H/8z/8S16ul4f++C/e/S+50FKb81hs8ZU4wMOHD0kmk+i6ztWrV2taTJbL5TBNkxMnTjA+
      Pl7zVHwxRGDxNPKzZ8/WJDc8PMytW7dwOBw11wCFQoHR0VEAfv/3f78Uqm8vnq884c7cp2XX
      +pr7uRZ6b085U1TGyxe8mbGN3mTq2pUfHx/nwYMHFWPUGxsb9PX1EQgEah73bmxs5Pr163g8
      Hi5fvlzTziLYiq2pKAqxWOxAQWIfPHhAoVCgubm55mn/ooM2Njbyy1/+sqaAVIuJBT6e+sey
      f89XnuwrZ/FqqKsD9PX1MTAwUJquL/Kd73wHWZbp7u4+UByfYvPnIPMNxT2lLpfrQIcxd3d3
      c/PmzdLS51pwu90MDw/T3d3ND37wg7qftG5xdOraBJqYmEDTNC5dulR23WazlcIS6rq+NRW/
      D+l0ms8++4yTJ0/y/Plzbm4fUdmDUCjE7du30XX9QHt3L1++jM1mKy373a9tnlHT/O3Lv6q4
      /sMTv1WzTovXT10d4MKFCzQ0NDA7O1vWAb116xaJRIL29nY0TatpjbjD4UAIUQqTUevXtb29
      nd/+7d/GNM2aHA3gj371h6yn18qu/efv/AGdrt1rq2whw189/4uK65YDvNnU1QGi0Si3b9+u
      mKIvLlI6SKAn0zS5fPky4+Pj2Gy2mpYmfDj6t/x6ujyqwrXed/lO9961x3p6jeXkYtk1RcvD
      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
    </thumbnail>
    <thumbnail height='192' name='Total goals' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Wins yearwise' width='192'>
      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
      QgTZ9nXNtQAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
